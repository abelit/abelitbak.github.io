import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as l,c as n,a as t,b as a,w as o,d as e,f as d}from"./app-DR5J2daJ.js";const p="/assets/tidb-architecture-v6-RUmM7n8g.png",s={},h=d('<h1 id="tidb-整体架构" tabindex="-1"><a class="header-anchor" href="#tidb-整体架构"><span>TiDB 整体架构</span></a></h1><p>推荐先观看以下视频（时长约 14 分钟），快速了解 TiDB 的整体架构。</p><p><video src="https://download.pingcap.com/docs-cn/tidb_architecture.mp4" width="100%" height="100%" controls="controls" poster="https://download.pingcap.com/docs-cn/poster_tidb_architecture.png"></video></p><p>与传统的单机数据库相比，TiDB 具有以下优势：</p><ul><li>纯分布式架构，拥有良好的扩展性，支持弹性的扩缩容</li><li>支持 SQL，对外暴露 MySQL 的网络协议，并兼容大多数 MySQL 的语法，在大多数场景下可以直接替换 MySQL</li><li>默认支持高可用，在少数副本失效的情况下，数据库本身能够自动进行数据修复和故障转移，对业务透明</li><li>支持 ACID 事务，对于一些有强一致需求的场景友好，例如：银行转账</li><li>具有丰富的工具链生态，覆盖数据迁移、同步、备份等多种场景</li></ul><p>在内核设计上，TiDB 分布式数据库将整体架构拆分成了多个模块，各模块之间互相通信，组成完整的 TiDB 系统。对应的架构图如下：</p><figure><img src="'+p+'" alt="architecture" tabindex="0" loading="lazy"><figcaption>architecture</figcaption></figure>',7),u=t("p",null,"存储节点",-1);function m(T,g){const i=c("RouteLink");return l(),n("div",null,[h,t("ul",null,[t("li",null,[t("p",null,[a(i,{to:"/tidb-computing.html"},{default:o(()=>[e("TiDB Server")]),_:1}),e("：SQL 层，对外暴露 MySQL 协议的连接 endpoint，负责接受客户端的连接，执行 SQL 解析和优化，最终生成分布式执行计划。TiDB 层本身是无状态的，实践中可以启动多个 TiDB 实例，通过负载均衡组件（如 LVS、HAProxy 或 F5）对外提供统一的接入地址，客户端的连接可以均匀地分摊在多个 TiDB 实例上以达到负载均衡的效果。TiDB Server 本身并不存储数据，只是解析 SQL，将实际的数据读取请求转发给底层的存储节点 TiKV（或 TiFlash）。")])]),t("li",null,[t("p",null,[a(i,{to:"/tidb-scheduling.html"},{default:o(()=>[e("PD (Placement Driver) Server")]),_:1}),e("：整个 TiDB 集群的元信息管理模块，负责存储每个 TiKV 节点实时的数据分布情况和集群的整体拓扑结构，提供 TiDB Dashboard 管控界面，并为分布式事务分配事务 ID。PD 不仅存储元信息，同时还会根据 TiKV 节点实时上报的数据分布状态，下发数据调度命令给具体的 TiKV 节点，可以说是整个集群的“大脑”。此外，PD 本身也是由至少 3 个节点构成，拥有高可用的能力。建议部署奇数个 PD 节点。")])]),t("li",null,[u,t("ul",null,[t("li",null,[a(i,{to:"/tidb-storage.html"},{default:o(()=>[e("TiKV Server")]),_:1}),e("：负责存储数据，从外部看 TiKV 是一个分布式的提供事务的 Key-Value 存储引擎。存储数据的基本单位是 Region，每个 Region 负责存储一个 Key Range（从 StartKey 到 EndKey 的左闭右开区间）的数据，每个 TiKV 节点会负责多个 Region。TiKV 的 API 在 KV 键值对层面提供对分布式事务的原生支持，默认提供了 SI (Snapshot Isolation) 的隔离级别，这也是 TiDB 在 SQL 层面支持分布式事务的核心。TiDB 的 SQL 层做完 SQL 解析后，会将 SQL 的执行计划转换为对 TiKV API 的实际调用。所以，数据都存储在 TiKV 中。另外，TiKV 中的数据都会自动维护多副本（默认为三副本），天然支持高可用和自动故障转移。")]),t("li",null,[a(i,{to:"/tiflash/tiflash-overview.html"},{default:o(()=>[e("TiFlash")]),_:1}),e("：TiFlash 是一类特殊的存储节点。和普通 TiKV 节点不一样的是，在 TiFlash 内部，数据是以列式的形式进行存储，主要的功能是为分析型的场景加速。")])])])])])}const y=r(s,[["render",m],["__file","tidb-architecture.html.vue"]]),S=JSON.parse('{"path":"/guide/database/tidb/architecture/tidb-architecture.html","title":"TiDB 整体架构","lang":"zh-CN","frontmatter":{"title":"TiDB 整体架构","summary":"了解 TiDB 的整体架构。","aliases":["/docs-cn/dev/tidb-architecture/","/docs-cn/dev/architecture/"],"description":"TiDB 整体架构 推荐先观看以下视频（时长约 14 分钟），快速了解 TiDB 的整体架构。 与传统的单机数据库相比，TiDB 具有以下优势： 纯分布式架构，拥有良好的扩展性，支持弹性的扩缩容 支持 SQL，对外暴露 MySQL 的网络协议，并兼容大多数 MySQL 的语法，在大多数场景下可以直接替换 MySQL 默认支持高可用，在少数副本失效的情况...","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/database/tidb/architecture/tidb-architecture.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"TiDB 整体架构"}],["meta",{"property":"og:description","content":"TiDB 整体架构 推荐先观看以下视频（时长约 14 分钟），快速了解 TiDB 的整体架构。 与传统的单机数据库相比，TiDB 具有以下优势： 纯分布式架构，拥有良好的扩展性，支持弹性的扩缩容 支持 SQL，对外暴露 MySQL 的网络协议，并兼容大多数 MySQL 的语法，在大多数场景下可以直接替换 MySQL 默认支持高可用，在少数副本失效的情况..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T14:06:18.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-05-11T14:06:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TiDB 整体架构\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T14:06:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[],"git":{"createdTime":1715436378000,"updatedTime":1715436378000,"contributors":[{"name":"ableit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":2.92,"words":877},"filePathRelative":"guide/database/tidb/architecture/tidb-architecture.md","localizedDate":"2024年5月11日","autoDesc":true,"excerpt":"\\n<p>推荐先观看以下视频（时长约 14 分钟），快速了解 TiDB 的整体架构。</p>\\n<p><video src=\\"https://download.pingcap.com/docs-cn/tidb_architecture.mp4\\" width=\\"100%\\" height=\\"100%\\" controls=\\"controls\\" poster=\\"https://download.pingcap.com/docs-cn/poster_tidb_architecture.png\\"></video></p>\\n<p>与传统的单机数据库相比，TiDB 具有以下优势：</p>\\n<ul>\\n<li>纯分布式架构，拥有良好的扩展性，支持弹性的扩缩容</li>\\n<li>支持 SQL，对外暴露 MySQL 的网络协议，并兼容大多数 MySQL 的语法，在大多数场景下可以直接替换 MySQL</li>\\n<li>默认支持高可用，在少数副本失效的情况下，数据库本身能够自动进行数据修复和故障转移，对业务透明</li>\\n<li>支持 ACID 事务，对于一些有强一致需求的场景友好，例如：银行转账</li>\\n<li>具有丰富的工具链生态，覆盖数据迁移、同步、备份等多种场景</li>\\n</ul>"}');export{y as comp,S as data};
