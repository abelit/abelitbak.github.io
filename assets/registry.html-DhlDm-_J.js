import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as l,c as d,b as p,w as t,f as r,d as a,a as e}from"./app-DR5J2daJ.js";const u={},h=r(`<h2 id="部署docker-registry" tabindex="-1"><a class="header-anchor" href="#部署docker-registry"><span>部署Docker Registry</span></a></h2><h3 id="主机信息" tabindex="-1"><a class="header-anchor" href="#主机信息"><span>主机信息</span></a></h3><table><thead><tr><th>主机名称</th><th>IP 地址</th><th>域名</th><th>用途</th><th>组件</th><th>镜像版本</th></tr></thead><tbody><tr><td>harbor.datapeacock.com</td><td>harbor.datapeacock.com</td><td>10.10.12.100</td><td>Docker 私有仓库</td><td>registry</td><td>2.8.3</td></tr></tbody></table><h3 id="安装运行-docker-registry" tabindex="-1"><a class="header-anchor" href="#安装运行-docker-registry"><span>安装运行 docker-registry</span></a></h3><ul><li>签名证书</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /root/docker-certs
openssl req <span class="token parameter variable">-newkey</span> rsa:4096 <span class="token parameter variable">-nodes</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-keyout</span> /root/docker-certs/harbor.datapeacock.com.key <span class="token parameter variable">-x509</span> <span class="token parameter variable">-days</span> <span class="token number">3000</span> <span class="token parameter variable">-out</span> /root/docker-certs/harbor.datapeacock.com.crt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6),m=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"docker"),a(" run "),e("span",{class:"token parameter variable"},"-d"),a(),e("span",{class:"token parameter variable"},"--name"),e("span",{class:"token operator"},"="),a("registry "),e("span",{class:"token parameter variable"},"--restart"),e("span",{class:"token operator"},"="),a("always "),e("span",{class:"token parameter variable"},"-p"),a(),e("span",{class:"token number"},"5000"),a(":5000 "),e("span",{class:"token parameter variable"},"-v"),a(` /opt/data/registry:/var/lib/registry registry
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),b=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"docker"),a(" run "),e("span",{class:"token parameter variable"},"-d"),a(),e("span",{class:"token parameter variable"},"--name"),e("span",{class:"token operator"},"="),a("registry "),e("span",{class:"token parameter variable"},"--restart"),e("span",{class:"token operator"},"="),a("always "),e("span",{class:"token parameter variable"},"-v"),a(" /opt/data/registry:/var/lib/registry "),e("span",{class:"token parameter variable"},"-v"),a(" /root/docker-certs:/certs "),e("span",{class:"token parameter variable"},"-e"),a(),e("span",{class:"token assign-left variable"},"REGISTRY_HTTP_ADDR"),e("span",{class:"token operator"},"="),e("span",{class:"token number"},"0.0"),a(".0.0:443 "),e("span",{class:"token parameter variable"},"-e"),a(),e("span",{class:"token assign-left variable"},"REGISTRY_HTTP_TLS_CERTIFICATE"),e("span",{class:"token operator"},"="),a("/certs/harbor.datapeacock.com.crt "),e("span",{class:"token parameter variable"},"-e"),a(),e("span",{class:"token assign-left variable"},"REGISTRY_HTTP_TLS_KEY"),e("span",{class:"token operator"},"="),a("/certs/harbor.datapeacock.com.key "),e("span",{class:"token parameter variable"},"-p"),a(),e("span",{class:"token number"},"5000"),a(`:443 registry
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),k=r(`<h3 id="私有仓库管理" tabindex="-1"><a class="header-anchor" href="#私有仓库管理"><span>私有仓库管理</span></a></h3><h4 id="打包、推送镜像到私有仓库" tabindex="-1"><a class="header-anchor" href="#打包、推送镜像到私有仓库"><span>打包、推送镜像到私有仓库</span></a></h4><ul><li>标记镜像</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> tag ubuntu:latest harbor.datapeacock.com:5000/ubuntu:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>上传镜像</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> push harbor.datapeacock.com:5000/ubuntu:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>看仓库中的镜像</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> harbor.datapeacock.com:5000/v2/_catalog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>拉取镜像</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull harbor.datapeacock.com:5000/ubuntu:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置非-https-仓库地址" tabindex="-1"><a class="header-anchor" href="#配置非-https-仓库地址"><span>配置非 https 仓库地址</span></a></h3><p>编辑<code>/etc/docker/daemon.json</code>，新增如下内容：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;https://mirror.baidubce.com&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;insecure-registries&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;harbor.datapeacock.com:5000&quot;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启docker服务</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function v(g,y){const o=c("CodeTabs");return l(),d("div",null,[h,p(o,{id:"63",data:[{id:"http"},{id:"https"}],active:0},{title0:t(({value:s,isActive:n})=>[a("http")]),title1:t(({value:s,isActive:n})=>[a("https")]),tab0:t(({value:s,isActive:n})=>[m]),tab1:t(({value:s,isActive:n})=>[b]),_:1}),k])}const x=i(u,[["render",v],["__file","registry.html.vue"]]),T=JSON.parse('{"path":"/guide/cloudnative/docker/registry.html","title":"Docker Registry","lang":"zh-CN","frontmatter":{"title":"Docker Registry","description":"部署Docker Registry 主机信息 安装运行 docker-registry 签名证书 私有仓库管理 打包、推送镜像到私有仓库 标记镜像 上传镜像 看仓库中的镜像 拉取镜像 配置非 https 仓库地址 编辑/etc/docker/daemon.json，新增如下内容： 重启docker服务","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/cloudnative/docker/registry.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"Docker Registry"}],["meta",{"property":"og:description","content":"部署Docker Registry 主机信息 安装运行 docker-registry 签名证书 私有仓库管理 打包、推送镜像到私有仓库 标记镜像 上传镜像 看仓库中的镜像 拉取镜像 配置非 https 仓库地址 编辑/etc/docker/daemon.json，新增如下内容： 重启docker服务"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T14:06:18.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-05-11T14:06:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker Registry\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T14:06:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"部署Docker Registry","slug":"部署docker-registry","link":"#部署docker-registry","children":[{"level":3,"title":"主机信息","slug":"主机信息","link":"#主机信息","children":[]},{"level":3,"title":"安装运行 docker-registry","slug":"安装运行-docker-registry","link":"#安装运行-docker-registry","children":[]},{"level":3,"title":"私有仓库管理","slug":"私有仓库管理","link":"#私有仓库管理","children":[]},{"level":3,"title":"配置非 https 仓库地址","slug":"配置非-https-仓库地址","link":"#配置非-https-仓库地址","children":[]}]}],"git":{"createdTime":1715436378000,"updatedTime":1715436378000,"contributors":[{"name":"ableit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":0.74,"words":223},"filePathRelative":"guide/cloudnative/docker/registry.md","localizedDate":"2024年5月11日","autoDesc":true,"excerpt":"<h2>部署Docker Registry</h2>\\n<h3>主机信息</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>主机名称</th>\\n<th>IP 地址</th>\\n<th>域名</th>\\n<th>用途</th>\\n<th>组件</th>\\n<th>镜像版本</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>harbor.datapeacock.com</td>\\n<td>harbor.datapeacock.com</td>\\n<td>10.10.12.100</td>\\n<td>Docker 私有仓库</td>\\n<td>registry</td>\\n<td>2.8.3</td>\\n</tr>\\n</tbody>\\n</table>"}');export{x as comp,T as data};
