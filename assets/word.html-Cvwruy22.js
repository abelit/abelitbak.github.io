import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-DR5J2daJ.js";const p={},o=t(`<h2 id="合并-word-文件" tabindex="-1"><a class="header-anchor" href="#合并-word-文件"><span>合并 word 文件</span></a></h2><ul><li>mergeword.py</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># -*- encoding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
@File    :   mergeword.py
@Time    :   2023/11/16 10:48:34
@Author  :   Abelit 
@Version :   1.0
@Contact :   ychenid@live.com
@Copyright :   (C)Copyright 2020, dataforum.org
@Licence :   BSD-3-Clause
@Desc    :   None
@Requirements: docx python-docx docxcompose
&#39;&#39;&#39;</span>

<span class="token keyword">import</span> os<span class="token punctuation">,</span> sys<span class="token punctuation">,</span> time
<span class="token keyword">import</span> getopt
<span class="token keyword">from</span> docx <span class="token keyword">import</span> Document
<span class="token keyword">from</span> docxcompose<span class="token punctuation">.</span>composer <span class="token keyword">import</span> Composer
    

<span class="token keyword">def</span> <span class="token function">merge_word</span><span class="token punctuation">(</span>in_path<span class="token punctuation">,</span> out_file<span class="token punctuation">)</span><span class="token punctuation">:</span>
    merge_pages <span class="token operator">=</span> Document<span class="token punctuation">(</span><span class="token punctuation">)</span>
    composer <span class="token operator">=</span> Composer<span class="token punctuation">(</span>merge_pages<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>in_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;.docx&#39;</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token builtin">file</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;~$&#39;</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token builtin">file</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;outfile.docx&#39;</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token builtin">file</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;.DS_&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            composer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Document<span class="token punctuation">(</span>in_path <span class="token operator">+</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>sep <span class="token operator">+</span> <span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    merge_pages<span class="token punctuation">.</span>save<span class="token punctuation">(</span>out_file<span class="token punctuation">)</span>  


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">help</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    infile <span class="token operator">=</span> <span class="token boolean">None</span>
    outfile <span class="token operator">=</span> <span class="token string">&quot;outfile.docx&quot;</span>

    usage <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;&#39;&#39;mergeword.py:
    -h | --help, 查看帮助信息
    -i | infile, 必选项，指定要合并文件所在目录
    -o | outfile, 可选项，指定输出文件的名称
    示例: [python.exe | python] mergeword.py -i C:\\\\Users\\\\abelit\\\\Desktop -o outfile.docx
    &#39;&#39;&#39;</span></span>

    argv <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        opts<span class="token punctuation">,</span> args <span class="token operator">=</span> getopt<span class="token punctuation">.</span>getopt<span class="token punctuation">(</span>argv<span class="token punctuation">,</span> <span class="token string">&#39;hi:o:&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;help&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;infile=&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;outfile=&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;无效参数&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>usage<span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> opt<span class="token punctuation">,</span> arg <span class="token keyword">in</span> opts<span class="token punctuation">:</span>
        <span class="token keyword">if</span> opt <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;-h&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--help&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            <span class="token builtin">help</span> <span class="token operator">=</span> arg
        <span class="token keyword">if</span> opt <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;-i&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--infile&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            infile <span class="token operator">=</span> arg
        <span class="token keyword">elif</span> opt <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;-o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--outfile&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            outfile <span class="token operator">=</span> arg

    <span class="token keyword">if</span> <span class="token builtin">help</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>usage<span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> infile <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;请指定需要合并的文件所在目录! 使用&quot;-h&quot; 或 &quot;--help&quot; 查看具体参数。&#39;</span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在合并文件...&quot;</span><span class="token punctuation">)</span>
        start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        merge_word<span class="token punctuation">(</span>infile<span class="token punctuation">,</span>outfile<span class="token punctuation">)</span>
        end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;合并文件成功！ 共计用时 {0} s&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>end_time <span class="token operator">-</span> start_time<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;合并文件失败！&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","word.html.vue"]]),d=JSON.parse(`{"path":"/guide/development/language/python/word.html","title":"Word 处理","lang":"zh-CN","frontmatter":{"title":"Word 处理","description":"合并 word 文件 mergeword.py","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/development/language/python/word.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"Word 处理"}],["meta",{"property":"og:description","content":"合并 word 文件 mergeword.py"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T14:06:18.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-05-11T14:06:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Word 处理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T14:06:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"合并 word 文件","slug":"合并-word-文件","link":"#合并-word-文件","children":[]}],"git":{"createdTime":1715436378000,"updatedTime":1715436378000,"contributors":[{"name":"ableit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":0.96,"words":289},"filePathRelative":"guide/development/language/python/word.md","localizedDate":"2024年5月11日","autoDesc":true,"excerpt":"<h2>合并 word 文件</h2>\\n<ul>\\n<li>mergeword.py</li>\\n</ul>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\"># -*- encoding: utf-8 -*-</span>\\n<span class=\\"token triple-quoted-string string\\">'''\\n@File    :   mergeword.py\\n@Time    :   2023/11/16 10:48:34\\n@Author  :   Abelit \\n@Version :   1.0\\n@Contact :   ychenid@live.com\\n@Copyright :   (C)Copyright 2020, dataforum.org\\n@Licence :   BSD-3-Clause\\n@Desc    :   None\\n@Requirements: docx python-docx docxcompose\\n'''</span>\\n\\n<span class=\\"token keyword\\">import</span> os<span class=\\"token punctuation\\">,</span> sys<span class=\\"token punctuation\\">,</span> time\\n<span class=\\"token keyword\\">import</span> getopt\\n<span class=\\"token keyword\\">from</span> docx <span class=\\"token keyword\\">import</span> Document\\n<span class=\\"token keyword\\">from</span> docxcompose<span class=\\"token punctuation\\">.</span>composer <span class=\\"token keyword\\">import</span> Composer\\n    \\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">merge_word</span><span class=\\"token punctuation\\">(</span>in_path<span class=\\"token punctuation\\">,</span> out_file<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    merge_pages <span class=\\"token operator\\">=</span> Document<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    composer <span class=\\"token operator\\">=</span> Composer<span class=\\"token punctuation\\">(</span>merge_pages<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token builtin\\">file</span> <span class=\\"token keyword\\">in</span> os<span class=\\"token punctuation\\">.</span>listdir<span class=\\"token punctuation\\">(</span>in_path<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">.</span>endswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.docx'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">and</span> <span class=\\"token keyword\\">not</span> <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">.</span>startswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'~$'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">and</span> <span class=\\"token keyword\\">not</span> <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">.</span>startswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'outfile.docx'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">and</span> <span class=\\"token keyword\\">not</span> <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">.</span>startswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.DS_'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            composer<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>Document<span class=\\"token punctuation\\">(</span>in_path <span class=\\"token operator\\">+</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>sep <span class=\\"token operator\\">+</span> <span class=\\"token builtin\\">file</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n    merge_pages<span class=\\"token punctuation\\">.</span>save<span class=\\"token punctuation\\">(</span>out_file<span class=\\"token punctuation\\">)</span>  \\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token builtin\\">help</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n    infile <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n    outfile <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"outfile.docx\\"</span>\\n\\n    usage <span class=\\"token operator\\">=</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f'''mergeword.py:\\n    -h | --help, 查看帮助信息\\n    -i | infile, 必选项，指定要合并文件所在目录\\n    -o | outfile, 可选项，指定输出文件的名称\\n    示例: [python.exe | python] mergeword.py -i C:\\\\\\\\Users\\\\\\\\abelit\\\\\\\\Desktop -o outfile.docx\\n    '''</span></span>\\n\\n    argv <span class=\\"token operator\\">=</span> sys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span>\\n\\n    <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n        opts<span class=\\"token punctuation\\">,</span> args <span class=\\"token operator\\">=</span> getopt<span class=\\"token punctuation\\">.</span>getopt<span class=\\"token punctuation\\">(</span>argv<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'hi:o:'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'help'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'infile='</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'outfile='</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">except</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'无效参数'</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>usage<span class=\\"token punctuation\\">)</span>\\n        exit<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">for</span> opt<span class=\\"token punctuation\\">,</span> arg <span class=\\"token keyword\\">in</span> opts<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">if</span> opt <span class=\\"token keyword\\">in</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'-h'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'--help'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token builtin\\">help</span> <span class=\\"token operator\\">=</span> arg\\n        <span class=\\"token keyword\\">if</span> opt <span class=\\"token keyword\\">in</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'-i'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'--infile'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n            infile <span class=\\"token operator\\">=</span> arg\\n        <span class=\\"token keyword\\">elif</span> opt <span class=\\"token keyword\\">in</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'-o'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'--outfile'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n            outfile <span class=\\"token operator\\">=</span> arg\\n\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">help</span> <span class=\\"token keyword\\">is</span> <span class=\\"token keyword\\">not</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>usage<span class=\\"token punctuation\\">)</span>\\n        exit<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n    \\n    <span class=\\"token keyword\\">if</span> infile <span class=\\"token keyword\\">is</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'请指定需要合并的文件所在目录! 使用\\"-h\\" 或 \\"--help\\" 查看具体参数。'</span><span class=\\"token punctuation\\">)</span>\\n        exit<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"正在合并文件...\\"</span><span class=\\"token punctuation\\">)</span>\\n        start_time <span class=\\"token operator\\">=</span> time<span class=\\"token punctuation\\">.</span>time<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        merge_word<span class=\\"token punctuation\\">(</span>infile<span class=\\"token punctuation\\">,</span>outfile<span class=\\"token punctuation\\">)</span>\\n        end_time <span class=\\"token operator\\">=</span> time<span class=\\"token punctuation\\">.</span>time<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'合并文件成功！ 共计用时 {0} s'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">round</span><span class=\\"token punctuation\\">(</span>end_time <span class=\\"token operator\\">-</span> start_time<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">except</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'合并文件失败！'</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'__main__'</span><span class=\\"token punctuation\\">:</span>\\n    main<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>"}`);export{r as comp,d as data};
