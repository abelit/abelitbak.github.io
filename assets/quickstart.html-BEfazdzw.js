import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,f as s}from"./app-DR5J2daJ.js";const l={},t=s(`<h2 id="先决条件" tabindex="-1"><a class="header-anchor" href="#先决条件"><span>先决条件</span></a></h2><p>想成功和正确地使用Helm，需要以下前置条件。</p><ul><li>一个 Kubernetes 集群</li><li>确定你安装版本的安全配置</li><li>安装和配置Helm。</li></ul><h3 id="安装或者使用现有的kubernetes集群" tabindex="-1"><a class="header-anchor" href="#安装或者使用现有的kubernetes集群"><span>安装或者使用现有的Kubernetes集群</span></a></h3><ul><li>使用Helm，需要一个Kubernetes集群。对于Helm的最新版本，我们建议使用Kubernetes的最新稳定版， 在大多数情况下，它是倒数第二个次版本。</li><li>您也应该有一个本地的 kubectl.</li></ul><h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化"><span>初始化</span></a></h2><p>当您已经安装好了Helm之后，您可以添加一个chart 仓库。从 Artifact Hub中查找有效的Helm chart仓库。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>helm repo <span class="token function">add</span> bitnami https://charts.bitnami.com/bitnami
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当添加完成，您将可以看到可以被您安装的charts列表：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>helm search repo bitnami
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="安装chart示例" tabindex="-1"><a class="header-anchor" href="#安装chart示例"><span>安装Chart示例</span></a></h2><p>您可以通过helm install 命令安装chart。 Helm可以通过多种途径查找和安装chart， 但最简单的是安装官方的bitnami charts。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>helm repo update 
helm <span class="token function">install</span> bitnami/mysql --generate-name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行结果</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>NAME: mysql-1679038444
LAST DEPLOYED: Fri Mar <span class="token number">17</span> <span class="token number">15</span>:34:06 <span class="token number">2023</span>
NAMESPACE: default
STATUS: deployed
REVISION: <span class="token number">1</span>
TEST SUITE: None
NOTES:
CHART NAME: mysql
CHART VERSION: <span class="token number">9.6</span>.0
APP VERSION: <span class="token number">8.0</span>.32

** Please be patient <span class="token keyword">while</span> the chart is being deployed **

Tip:

  Watch the deployment status using the command: kubectl get pods <span class="token parameter variable">-w</span> <span class="token parameter variable">--namespace</span> default

Services:

  <span class="token builtin class-name">echo</span> Primary: mysql-1679038444.default.svc.cluster.local:3306

Execute the following to get the administrator credentials:

  <span class="token builtin class-name">echo</span> Username: root
  <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl get secret <span class="token parameter variable">--namespace</span> default mysql-1679038444 <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token string">&quot;{.data.mysql-root-password}&quot;</span> <span class="token operator">|</span> base64 <span class="token parameter variable">-d</span><span class="token variable">)</span></span>

To connect to your database:

  <span class="token number">1</span>. Run a pod that you can use as a client:

      kubectl run mysql-1679038444-client <span class="token parameter variable">--rm</span> <span class="token parameter variable">--tty</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span><span class="token string">&#39;Never&#39;</span> <span class="token parameter variable">--image</span>  docker.io/bitnami/mysql:8.0.32-debian-11-r14 <span class="token parameter variable">--namespace</span> default <span class="token parameter variable">--env</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token variable">$MYSQL_ROOT_PASSWORD</span> <span class="token parameter variable">--command</span> -- <span class="token function">bash</span>

  <span class="token number">2</span>. To connect to primary <span class="token function">service</span> <span class="token punctuation">(</span>read/write<span class="token punctuation">)</span>:

      mysql <span class="token parameter variable">-h</span> mysql-1679038444.default.svc.cluster.local <span class="token parameter variable">-uroot</span> -p<span class="token string">&quot;<span class="token variable">$MYSQL_ROOT_PASSWORD</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关于版本发布" tabindex="-1"><a class="header-anchor" href="#关于版本发布"><span>关于版本发布</span></a></h2><p>通过Helm您可以很容易看到哪些chart被发布了：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>helm list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="卸载一个版本" tabindex="-1"><a class="header-anchor" href="#卸载一个版本"><span>卸载一个版本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>helm uninstall 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="查看帮助信息" tabindex="-1"><a class="header-anchor" href="#查看帮助信息"><span>查看帮助信息</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>helm get <span class="token parameter variable">-h</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,22),i=[t];function r(c,d){return a(),n("div",null,i)}const m=e(l,[["render",r],["__file","quickstart.html.vue"]]),u=JSON.parse('{"path":"/guide/cloudnative/helm/quickstart.html","title":"快速入门指南","lang":"zh-CN","frontmatter":{"title":"快速入门指南","description":"先决条件 想成功和正确地使用Helm，需要以下前置条件。 一个 Kubernetes 集群 确定你安装版本的安全配置 安装和配置Helm。 安装或者使用现有的Kubernetes集群 使用Helm，需要一个Kubernetes集群。对于Helm的最新版本，我们建议使用Kubernetes的最新稳定版， 在大多数情况下，它是倒数第二个次版本。 您也应该有...","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/cloudnative/helm/quickstart.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"快速入门指南"}],["meta",{"property":"og:description","content":"先决条件 想成功和正确地使用Helm，需要以下前置条件。 一个 Kubernetes 集群 确定你安装版本的安全配置 安装和配置Helm。 安装或者使用现有的Kubernetes集群 使用Helm，需要一个Kubernetes集群。对于Helm的最新版本，我们建议使用Kubernetes的最新稳定版， 在大多数情况下，它是倒数第二个次版本。 您也应该有..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T14:06:18.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-05-11T14:06:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速入门指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T14:06:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"先决条件","slug":"先决条件","link":"#先决条件","children":[{"level":3,"title":"安装或者使用现有的Kubernetes集群","slug":"安装或者使用现有的kubernetes集群","link":"#安装或者使用现有的kubernetes集群","children":[]}]},{"level":2,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":2,"title":"安装Chart示例","slug":"安装chart示例","link":"#安装chart示例","children":[]},{"level":2,"title":"关于版本发布","slug":"关于版本发布","link":"#关于版本发布","children":[]},{"level":2,"title":"卸载一个版本","slug":"卸载一个版本","link":"#卸载一个版本","children":[]},{"level":2,"title":"查看帮助信息","slug":"查看帮助信息","link":"#查看帮助信息","children":[]}],"git":{"createdTime":1715436378000,"updatedTime":1715436378000,"contributors":[{"name":"ableit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":1.46,"words":437},"filePathRelative":"guide/cloudnative/helm/quickstart.md","localizedDate":"2024年5月11日","autoDesc":true,"excerpt":"<h2>先决条件</h2>\\n<p>想成功和正确地使用Helm，需要以下前置条件。</p>\\n<ul>\\n<li>一个 Kubernetes 集群</li>\\n<li>确定你安装版本的安全配置</li>\\n<li>安装和配置Helm。</li>\\n</ul>\\n<h3>安装或者使用现有的Kubernetes集群</h3>\\n<ul>\\n<li>使用Helm，需要一个Kubernetes集群。对于Helm的最新版本，我们建议使用Kubernetes的最新稳定版， 在大多数情况下，它是倒数第二个次版本。</li>\\n<li>您也应该有一个本地的 kubectl.</li>\\n</ul>\\n<h2>初始化</h2>\\n<p>当您已经安装好了Helm之后，您可以添加一个chart 仓库。从 Artifact Hub中查找有效的Helm chart仓库。</p>"}');export{m as comp,u as data};
