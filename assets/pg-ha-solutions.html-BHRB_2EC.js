import{_ as e}from"./pg-ha-repmgr-archtecture-001-BUBkfB5-.js";import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as i,f as t}from"./app-DR5J2daJ.js";const l={},p=t('<h2 id="postgresql高可用集群-repmgr" tabindex="-1"><a class="header-anchor" href="#postgresql高可用集群-repmgr"><span>PostgreSQL高可用集群(REPMGR)</span></a></h2><h3 id="原理及拓扑图" tabindex="-1"><a class="header-anchor" href="#原理及拓扑图"><span>原理及拓扑图</span></a></h3><p>repmgr是一个2ndQuadrant开发的一款复制的开源工具套件，用于管理PostgreSQL服务器集群中的复制和故障转移。最初，它主要是为了简化流副本的管理，后来发展成为一个完整的故障转移管理套件。它通过设置备用服务器，监视复制以及执行管理任务（如故障转移或手动切换操作）的工具，增强了PostgreSQL内置的热备份功能。它支持并增强了PostgreSQL内置的流复制，该复制提供了一个读/写主服务器和一个或多个只读备用服务器，其中包含主服务器数据库的近实时副本。</p><figure><img src="'+e+`" alt="PostgreSQL高可用集群(PGHA-repmgr)" tabindex="0" loading="lazy"><figcaption>PostgreSQL高可用集群(PGHA-repmgr)</figcaption></figure><h3 id="repmgr特点" tabindex="-1"><a class="header-anchor" href="#repmgr特点"><span>repmgr特点</span></a></h3><ul><li><p>repmgr的特点是非常轻量，单功能全面</p></li><li><p>故障检测和自动故障切换：repmgr 可以检测到主服务器故障并自动切换到备用服务器。</p></li><li><p>自动故障恢复：repmgr 可以检测到从服务器故障并自动将其重新加入到复制拓扑中。</p></li><li><p>多个备用服务器：repmgr 支持多个备用服务器，可以在主服务器故障时自动切换到最合适的备用服务器。</p></li><li><p>灵活的复制拓扑：repmgr 支持各种复制拓扑，包括单主服务器和多主服务器。</p></li><li><p>管理和监控：repmgr 提供了用于管理和监控PostgreSQL复制的各种工具和命令。</p></li></ul><h3 id="repmgr两个主要工具" tabindex="-1"><a class="header-anchor" href="#repmgr两个主要工具"><span>repmgr两个主要工具</span></a></h3><h4 id="repmgr命令管理-replication-manager" tabindex="-1"><a class="header-anchor" href="#repmgr命令管理-replication-manager"><span>Repmgr命令管理 (replication manager)</span></a></h4><ul><li>repmgr： 用于执行管理任务的命令行工具 设置备用服务器，将备用服务器提升为主服务器，切换主服务器和备用服务器，clone恢复备机数据，注册节点，显示复制群集中服务器的状态。 <ul><li>设置备用服务器</li><li>将备用服务器升级为主服务器</li><li>切换主服务器和备用服务器</li><li>显示流复制状态</li><li>clone恢复备机数据</li><li>注册节点</li></ul></li></ul><h4 id="repmgrd守护进程-replication-manager-daemon" tabindex="-1"><a class="header-anchor" href="#repmgrd守护进程-replication-manager-daemon"><span>Repmgrd守护进程 (replication manager daemon)</span></a></h4><ul><li>repmgrd： 主动监视复制群集中的服务器的守护程序 监视和记录复制性能，监控和记录集群信息以及自定义脚本接受集群事件通知event_notification_command，它有一组预定义的事件，并将这些事件的每次发生都存储在 repmgr.events 表中。通过检测主数据库和提升最合适的备用服务器，向用户定义的群集中事件提供有关事件的通知 可以执行任务的脚本，例如通过电子邮件发送警报。Repmgrd 需要在启动 PostgreSQL 服务器时加载共享库“repmgr”。库名称应配置在 postgresql.conf 文件的shared_preload_libraries里。并且需要在 repmgr.conf 文件中设置 failover=automatic 参数。一旦设置了所有这些参数，Repmgrd 守护程序就会开始主动监控集群。如果主节点出现任何故障，它将尝试多次重新连接。当所有连接到主节点的尝试都失败时，Repmgrd 将通过选举选择最符合条件的备用节点作为新的主节点。 <ul><li>监控和记录集群复制性能</li><li>通过检测主服务器故障并提升最合适的备用服务器来执行故障转移</li><li>将有关群集中事件的通知提供给用户定义的脚本，该脚本可以执行诸如通过电子邮件发送警报等任务</li><li>repmgrd 根据本地数据库角色不同，其功能也不同：</li><li>主库：repmgrd仅监控本地数据库，负责自动恢复、同异步切换</li><li>备库：repmgrd监控本地数据库和主数据库，负责自动切换、复制槽删除</li></ul></li></ul><h3 id="repmgr元数据" tabindex="-1"><a class="header-anchor" href="#repmgr元数据"><span>repmgr元数据</span></a></h3><p>Repmgr元数据的schema可以存储在现有的数据库或在自己的专用数据库，repmgr元数据的schema不能驻留在不属于Repmgr管理的复制集群的数据库服务器上。</p><ul><li><p>repmgr相关表：</p><ul><li>repmgr.events：用来记录repmgr管理的事件信息</li><li>repmgr.nodes：复制群集中每个服务器的连接和状态信息</li><li>repmgr.monitoring_history：repmgrd写入的历史备用监视信息</li><li>repmgr.voting_term：【5.2新增】主要用来记录投票信息</li></ul></li><li><p>repmgr相关视图：</p><ul><li>repmgr.show_nodes：基于表repmgr.nodes，增加了显示上游节点的信息</li><li>repmgr.replication_status：启用repmgrd的监视时，显示每个备用数据库的当前监视状态。</li></ul></li></ul><h3 id="repmgr优缺点" tabindex="-1"><a class="header-anchor" href="#repmgr优缺点"><span>repmgr优缺点</span></a></h3><h4 id="repmgr-优点" tabindex="-1"><a class="header-anchor" href="#repmgr-优点"><span>repmgr 优点</span></a></h4><ul><li>repmgr 提供了帮助设置主节点和备用节点以及配置复制的实用程序。</li><li>不使用任何额外的端口进行通信。如果想执行切换，那么它才需要配置无密码SSH。</li><li>通过调用已注册事件的用户脚本来提供通知。</li><li>在主服务器发生故障时可以执行自动故障转移。</li><li>对数据库侵入小，维护起来和正常主备流复制基本一致。</li><li>配置简单。</li></ul><h4 id="repmgr-缺点" tabindex="-1"><a class="header-anchor" href="#repmgr-缺点"><span>repmgr 缺点</span></a></h4><ul><li>repmgr 不会检测备用库是否在恢复配置中使用未知或不存在的节点错误配置。即使节点在未连接到主/级联备用节点的情况下运行，节点也会显示为备用节点。</li><li>无法从 PostgreSQL 服务关闭的节点检索另一个节点的状态。因此，它不提供分布式控制解决方案。</li><li>它不能在备机单个节点down掉时，自动把其拉起。</li></ul><h3 id="repmgr如何仲裁哪台备机升主" tabindex="-1"><a class="header-anchor" href="#repmgr如何仲裁哪台备机升主"><span>repmgr如何仲裁哪台备机升主</span></a></h3><ul><li><p>每个备机检查到主机数据库故障后会进行重试，重试最后一次后，会去询问其他备用数据库。如果其它备用节点的最后一个复制的LSN或与主节点的最后一次通信的时间比当前节点的最后一个复制的LSN或最后一次通信的时间更近，则该节点不执行任何操作，并等待与主节点的通信恢复。</p></li><li><p>如果所有备机数据库节点都看不到主库，则它们将检查witness见证节点是否可用。如果也无法到达witness见证节点，则备机会假定主服务器端发生网络中断，因此不会继续选择新的主服务器。如果可以到达witness见证节点，则备机节点会假定主服务器已关闭，然后继续选择主节点。之后将升级配置为“首选”主节点的节点。每个备机数据库节点将重新初始化其复制，以跟随新的主数据库。</p></li></ul><p>repmgr怎么选主： 当需要failover时，repmgr选举候选备节点会以以下顺序选举：LSN &gt; Priority &gt; Node_ID。若LSN一样，会根据priority优先级进行比较，该优先级是在配置文件中进行参数配置，将priority设置为0会禁止参与选主。若优先级也一样，会比较节点的Node ID，小者会优先选举</p><h3 id="repmgr如何处理脑裂场景-位置参数、witness见证节点" tabindex="-1"><a class="header-anchor" href="#repmgr如何处理脑裂场景-位置参数、witness见证节点"><span>repmgr如何处理脑裂场景（位置参数、witness见证节点）</span></a></h3><h4 id="位置参数" tabindex="-1"><a class="header-anchor" href="#位置参数"><span>位置参数</span></a></h4><p>Repmgr使用location位置参数处理脑裂场景，其中每个节点应根据其所在的数据中心指定位置参数。在任何网络分裂的情况下，Repmgr将确保与主节点位于同一位置的节点的提升。如果它在该位置找不到任何节点，它将不会提升任何位置的任何节点。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">location</span><span class="token operator">=</span><span class="token string">&#39;location1&#39;</span>                    <span class="token comment"># 定义location</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>除此之外可以使用witness见证服务器的额外节点处理网络隔离，避免产生脑裂。</p><h4 id="见证节点" tabindex="-1"><a class="header-anchor" href="#见证节点"><span>见证节点</span></a></h4><p>witness见证节点重要用来处理集群主库和备库之间可能存在网络拥塞、延迟、路由等问题影响，导致主库还在正常工作，而备库无法联系主库的场景。通过设置witness节点可以针对主库与备库之间切换的检查完整性，即辅助备节点进行监控，避免因网络问题导致的脑裂现象。</p><p>见证节点主要的工作是帮助备库达到法定的数量。它是一个仅考虑多数票数的节点。该服务器上不需要安装PostgreSQL，因此在复制中没有任何作用。</p><p>当备机连不上主机了，就会连接witness见证节点，如果也连接不上见证节点，那判断自己网络故障了，如果能连上见证节点，则认为主机故障，见证节点的作用类似于一个信任的网关。</p><p>witness必须配合Repmgrd。 Remgrd启动后会作为常规服务运行并持续监视集群的运行状况。当达到与主机数据库失去联系的法定人数时，它将启动故障转移。它不仅可以自动升级备用数据库，还可以在多节点群集中重新启动其他备用数据库以跟随新的主数据库。</p>`,32),s=[p];function n(g,o){return a(),i("div",null,s)}const h=r(l,[["render",n],["__file","pg-ha-solutions.html.vue"]]),u=JSON.parse('{"path":"/guide/database/postgresql/ha/pg-ha-solutions.html","title":"PostgreSQL高可用原理","lang":"zh-CN","frontmatter":{"title":"PostgreSQL高可用原理","description":"PostgreSQL高可用集群(REPMGR) 原理及拓扑图 repmgr是一个2ndQuadrant开发的一款复制的开源工具套件，用于管理PostgreSQL服务器集群中的复制和故障转移。最初，它主要是为了简化流副本的管理，后来发展成为一个完整的故障转移管理套件。它通过设置备用服务器，监视复制以及执行管理任务（如故障转移或手动切换操作）的工具，增强了...","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/database/postgresql/ha/pg-ha-solutions.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"PostgreSQL高可用原理"}],["meta",{"property":"og:description","content":"PostgreSQL高可用集群(REPMGR) 原理及拓扑图 repmgr是一个2ndQuadrant开发的一款复制的开源工具套件，用于管理PostgreSQL服务器集群中的复制和故障转移。最初，它主要是为了简化流副本的管理，后来发展成为一个完整的故障转移管理套件。它通过设置备用服务器，监视复制以及执行管理任务（如故障转移或手动切换操作）的工具，增强了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T14:06:18.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-05-11T14:06:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PostgreSQL高可用原理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T14:06:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"PostgreSQL高可用集群(REPMGR)","slug":"postgresql高可用集群-repmgr","link":"#postgresql高可用集群-repmgr","children":[{"level":3,"title":"原理及拓扑图","slug":"原理及拓扑图","link":"#原理及拓扑图","children":[]},{"level":3,"title":"repmgr特点","slug":"repmgr特点","link":"#repmgr特点","children":[]},{"level":3,"title":"repmgr两个主要工具","slug":"repmgr两个主要工具","link":"#repmgr两个主要工具","children":[]},{"level":3,"title":"repmgr元数据","slug":"repmgr元数据","link":"#repmgr元数据","children":[]},{"level":3,"title":"repmgr优缺点","slug":"repmgr优缺点","link":"#repmgr优缺点","children":[]},{"level":3,"title":"repmgr如何仲裁哪台备机升主","slug":"repmgr如何仲裁哪台备机升主","link":"#repmgr如何仲裁哪台备机升主","children":[]},{"level":3,"title":"repmgr如何处理脑裂场景（位置参数、witness见证节点）","slug":"repmgr如何处理脑裂场景-位置参数、witness见证节点","link":"#repmgr如何处理脑裂场景-位置参数、witness见证节点","children":[]}]}],"git":{"createdTime":1715436378000,"updatedTime":1715436378000,"contributors":[{"name":"ableit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":7.56,"words":2268},"filePathRelative":"guide/database/postgresql/ha/pg-ha-solutions.md","localizedDate":"2024年5月11日","autoDesc":true,"excerpt":"<h2>PostgreSQL高可用集群(REPMGR)</h2>\\n<h3>原理及拓扑图</h3>\\n<p>repmgr是一个2ndQuadrant开发的一款复制的开源工具套件，用于管理PostgreSQL服务器集群中的复制和故障转移。最初，它主要是为了简化流副本的管理，后来发展成为一个完整的故障转移管理套件。它通过设置备用服务器，监视复制以及执行管理任务（如故障转移或手动切换操作）的工具，增强了PostgreSQL内置的热备份功能。它支持并增强了PostgreSQL内置的流复制，该复制提供了一个读/写主服务器和一个或多个只读备用服务器，其中包含主服务器数据库的近实时副本。</p>\\n<figure><figcaption>PostgreSQL高可用集群(PGHA-repmgr)</figcaption></figure>"}');export{h as comp,u as data};
