import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as e}from"./app-DR5J2daJ.js";const p={},t=e(`<h2 id="排查方向" tabindex="-1"><a class="header-anchor" href="#排查方向"><span>排查方向</span></a></h2><p>（1）基准测试 (吞吐量): 包括 Oracle 本身吞吐量和磁盘 I/O 吞吐量 （2）硬件分析 (资源情况): 包括查看服务器 CPU , 硬盘的使用情况 （3）SQL 分析: 分析 SQL 中是否存在慢查询 , 是否命中索引 （4）配置优化: 分析是否可以通过环境配置提高性能</p><h2 id="排查步骤" tabindex="-1"><a class="header-anchor" href="#排查步骤"><span>排查步骤</span></a></h2><h3 id="查询慢查询日志" tabindex="-1"><a class="header-anchor" href="#查询慢查询日志"><span>查询慢查询日志</span></a></h3><ul><li>TOPSQL-耗时</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span>
 <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> sa<span class="token punctuation">.</span>SQL_TEXT <span class="token string">&quot;执行 SQL&quot;</span><span class="token punctuation">,</span>
        sa<span class="token punctuation">.</span>EXECUTIONS <span class="token string">&quot;执行次数&quot;</span><span class="token punctuation">,</span>
        <span class="token function">round</span><span class="token punctuation">(</span>sa<span class="token punctuation">.</span>ELAPSED_TIME <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;总执行时间&quot;</span><span class="token punctuation">,</span>
        <span class="token function">round</span><span class="token punctuation">(</span>sa<span class="token punctuation">.</span>ELAPSED_TIME <span class="token operator">/</span> <span class="token number">1000000</span> <span class="token operator">/</span> sa<span class="token punctuation">.</span>EXECUTIONS<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;平均执行时间&quot;</span><span class="token punctuation">,</span>
        sa<span class="token punctuation">.</span>COMMAND_TYPE<span class="token punctuation">,</span>
        sa<span class="token punctuation">.</span>PARSING_USER_ID <span class="token string">&quot;用户 ID&quot;</span><span class="token punctuation">,</span>
        u<span class="token punctuation">.</span>username <span class="token string">&quot;用户名&quot;</span><span class="token punctuation">,</span>
        sa<span class="token punctuation">.</span>HASH_VALUE
     <span class="token keyword">from</span> v$sqlarea sa
     <span class="token keyword">left</span> <span class="token keyword">join</span> all_users u
      <span class="token keyword">on</span> sa<span class="token punctuation">.</span>PARSING_USER_ID <span class="token operator">=</span> u<span class="token punctuation">.</span>user_id
     <span class="token keyword">where</span> sa<span class="token punctuation">.</span>EXECUTIONS <span class="token operator">&gt;</span> <span class="token number">0</span>
     <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token punctuation">(</span>sa<span class="token punctuation">.</span>ELAPSED_TIME <span class="token operator">/</span> sa<span class="token punctuation">.</span>EXECUTIONS<span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">)</span>
 <span class="token keyword">where</span> rownum <span class="token operator">&lt;=</span> <span class="token number">50</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>TOPSQL-执行次数</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span>
 <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> s<span class="token punctuation">.</span>SQL_TEXT<span class="token punctuation">,</span>
        s<span class="token punctuation">.</span>EXECUTIONS <span class="token string">&quot;执行次数&quot;</span><span class="token punctuation">,</span>
        s<span class="token punctuation">.</span>PARSING_USER_ID <span class="token string">&quot;用户名&quot;</span><span class="token punctuation">,</span>
        rank<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">order</span> <span class="token keyword">by</span> EXECUTIONS <span class="token keyword">desc</span><span class="token punctuation">)</span> EXEC_RANK
     <span class="token keyword">from</span> v$<span class="token keyword">sql</span> s
     <span class="token keyword">left</span> <span class="token keyword">join</span> all_users u
      <span class="token keyword">on</span> u<span class="token punctuation">.</span>USER_ID <span class="token operator">=</span> s<span class="token punctuation">.</span>PARSING_USER_ID<span class="token punctuation">)</span> t
 <span class="token keyword">where</span> exec_rank <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>TOPSQL-查询耗时</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> a<span class="token punctuation">.</span>sql_text <span class="token keyword">SQL</span> 语句<span class="token punctuation">,</span> 
       b<span class="token punctuation">.</span>etime 执行耗时<span class="token punctuation">,</span> 
       c<span class="token punctuation">.</span>user_id 用户 ID<span class="token punctuation">,</span>
       c<span class="token punctuation">.</span>SAMPLE_TIME 执行时间<span class="token punctuation">,</span> 
       c<span class="token punctuation">.</span>INSTANCE_NUMBER 实例数<span class="token punctuation">,</span> 
       u<span class="token punctuation">.</span>username 用户名<span class="token punctuation">,</span> a<span class="token punctuation">.</span>sql_id <span class="token keyword">SQL</span> 编号
  <span class="token keyword">from</span> dba_hist_sqltext a<span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token keyword">select</span> sql_id<span class="token punctuation">,</span> ELAPSED_TIME_DELTA <span class="token operator">/</span> <span class="token number">1000000</span> <span class="token keyword">as</span> etime
          <span class="token keyword">from</span> dba_hist_sqlstat
         <span class="token keyword">where</span> ELAPSED_TIME_DELTA <span class="token operator">/</span> <span class="token number">1000000</span> <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> b<span class="token punctuation">,</span>
       dba_hist_active_sess_history c<span class="token punctuation">,</span>
       dba_users u
 <span class="token keyword">where</span> a<span class="token punctuation">.</span>sql_id <span class="token operator">=</span> b<span class="token punctuation">.</span>sql_id
   <span class="token operator">and</span> u<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">&#39;SYNC_PLUS_1_20190109&#39;</span>
   <span class="token operator">and</span> c<span class="token punctuation">.</span>user_id <span class="token operator">=</span> u<span class="token punctuation">.</span>user_id
   <span class="token operator">and</span> b<span class="token punctuation">.</span>sql_id <span class="token operator">=</span> c<span class="token punctuation">.</span>sql_id
  <span class="token comment">-- and a.sql_text like &#39;%insert into GK_ZWVCH_HSC_NEW      select  %&#39;</span>
 <span class="token keyword">order</span> <span class="token keyword">by</span>  SAMPLE_TIME <span class="token keyword">desc</span><span class="token punctuation">,</span>
  b<span class="token punctuation">.</span>etime <span class="token keyword">desc</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>SlowSQL-TABLE ACCESS FULL (扫全表)</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span>
  <span class="token keyword">from</span> v$sql_plan v
 <span class="token keyword">where</span> v<span class="token punctuation">.</span>operation <span class="token operator">=</span> <span class="token string">&#39;TABLE ACCESS&#39;</span>
   <span class="token operator">and</span> v<span class="token punctuation">.</span>OPTIONS <span class="token operator">=</span> <span class="token string">&#39;FULL&#39;</span>
   <span class="token operator">and</span> v<span class="token punctuation">.</span>OBJECT_OWNER<span class="token operator">=</span><span class="token string">&#39;SYNC_PLUS_1_20190109&#39;</span><span class="token punctuation">;</span>


<span class="token keyword">select</span> s<span class="token punctuation">.</span>SQL_TEXT
  <span class="token keyword">from</span> v$sqlarea s
 <span class="token keyword">where</span> s<span class="token punctuation">.</span>SQL_ID <span class="token operator">=</span> <span class="token string">&#39;4dpd97jh2gzsd&#39;</span>
   <span class="token operator">and</span> s<span class="token punctuation">.</span>HASH_VALUE <span class="token operator">=</span> <span class="token string">&#39;1613233933&#39;</span>
   <span class="token operator">and</span> s<span class="token punctuation">.</span>PLAN_HASH_VALUE <span class="token operator">=</span> <span class="token string">&#39;3592287464&#39;</span><span class="token punctuation">;</span>


<span class="token keyword">select</span> s<span class="token punctuation">.</span>SQL_TEXT <span class="token keyword">from</span> v$sqlarea s <span class="token keyword">where</span> s<span class="token punctuation">.</span>ADDRESS <span class="token operator">=</span> <span class="token string">&#39;00000000A65D2318&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看执行计划" tabindex="-1"><a class="header-anchor" href="#查看执行计划"><span>查看执行计划</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">plan</span> <span class="token keyword">for</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_call_records <span class="token keyword">where</span> t_bjhm<span class="token operator">=</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span><span class="token punctuation">(</span>dbms_xplan<span class="token punctuation">.</span>display<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>index unique scan : 索引唯一扫描 (主键索引)</p><p>index range scan : 索引范围扫描 (组合索引的情况)</p><p>index full scan : 全索引扫描</p><p>index fast full scan : 索引快速扫描, 扫描索引中的全部的数据块, 与全索引扫描的方式基本上类似。</p><p>两者之间的明显的区别是, 索引快速扫描对查询的数据不进行排序, 数据返回的时候不是排序的。</p></div><h3 id="查看锁的竞争" tabindex="-1"><a class="header-anchor" href="#查看锁的竞争"><span>查看锁的竞争</span></a></h3><ul><li>查询后台锁竞争</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
    SQ<span class="token punctuation">.</span>INST_ID<span class="token punctuation">,</span>
    SQ<span class="token punctuation">.</span>SQL_TEXT<span class="token punctuation">,</span> <span class="token comment">/*SQL 文本*/</span>
    SE<span class="token punctuation">.</span>SID<span class="token punctuation">,</span> <span class="token comment">/*会话的唯一标识, 通常要对某个会话进行分析前, 首先就需要获得该会话的 SID。*/</span>
    SE<span class="token punctuation">.</span>BLOCKING_SESSION<span class="token punctuation">,</span>
    SQ<span class="token punctuation">.</span>OPTIMIZER_COST <span class="token keyword">AS</span> COST_<span class="token punctuation">,</span><span class="token comment">/* COST 值*/</span>
    SE<span class="token punctuation">.</span>LAST_CALL_ET CONTINUE_TIME<span class="token punctuation">,</span><span class="token comment">/*执行时间*/</span>
    SE<span class="token punctuation">.</span>EVENT<span class="token punctuation">,</span><span class="token comment">/*等待事件*/</span>
    SE<span class="token punctuation">.</span>LOCKWAIT<span class="token punctuation">,</span><span class="token comment">/*是否等待 LOCK(SE, P)*/</span>
    SE<span class="token punctuation">.</span>MACHINE<span class="token punctuation">,</span><span class="token comment">/*客户端的机器名。(WORKGROUP\\PC-201211082055)*/</span>
    SQ<span class="token punctuation">.</span>SQL_ID<span class="token punctuation">,</span><span class="token comment">/*SQL_ID*/</span>
    SE<span class="token punctuation">.</span>USERNAME<span class="token punctuation">,</span><span class="token comment">/*创建该会话的用户名*/</span>
    SE<span class="token punctuation">.</span>LOGON_TIME<span class="token punctuation">,</span><span class="token comment">/*登陆时间*/</span>
    <span class="token string">&#39;ALTER SYSTEM KILL SESSION &#39;</span> <span class="token operator">||</span> SE<span class="token punctuation">.</span>SID <span class="token operator">||</span> <span class="token string">&#39;,&#39;</span> <span class="token operator">||</span> SE<span class="token punctuation">.</span><span class="token keyword">SERIAL</span> <span class="token comment">#  --若存在锁情况, 会用到 KILL 锁释放~</span>
<span class="token keyword">FROM</span>
    gV$<span class="token keyword">SESSION</span> SE<span class="token punctuation">,</span><span class="token comment">/*会话信息。每一个连接到 ORACLE 数据库的会话都能在该视图中对应一条记录*/</span>
    gV$SQLAREA SQ <span class="token comment">/*跟踪所有 SHARED POOL 中的共享 CURSOR 信息, 包括 执行次数, 逻辑读, 物理读等*/</span>
<span class="token keyword">WHERE</span>
    SE<span class="token punctuation">.</span>SQL_HASH_VALUE <span class="token operator">=</span> SQ<span class="token punctuation">.</span>HASH_VALUE    
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span><span class="token keyword">STATUS</span> <span class="token operator">=</span> <span class="token string">&#39;ACTIVE&#39;</span>    
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span>SQL_ID <span class="token operator">=</span> SQ<span class="token punctuation">.</span>SQL_ID    
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span>USERNAME <span class="token operator">=</span> SQ<span class="token punctuation">.</span>PARSING_SCHEMA_NAME       <span class="token comment">--过滤条件</span>
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span>USERNAME <span class="token operator">=</span> <span class="token string">&#39;FWSB&#39;</span> <span class="token comment">--用户名</span>
    <span class="token operator">AND</span> se<span class="token punctuation">.</span>BLOCKING_SESSION <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
        
 
<span class="token keyword">SELECT</span>
    SQ<span class="token punctuation">.</span>INST_ID<span class="token punctuation">,</span>
    SQ<span class="token punctuation">.</span>SQL_TEXT<span class="token punctuation">,</span>
    SE<span class="token punctuation">.</span>SID<span class="token punctuation">,</span>
    SE<span class="token punctuation">.</span>BLOCKING_SESSION<span class="token punctuation">,</span>
    SQ<span class="token punctuation">.</span>OPTIMIZER_COST <span class="token keyword">AS</span> COST_<span class="token punctuation">,</span>
    SE<span class="token punctuation">.</span>LAST_CALL_ET CONTINUE_TIME<span class="token punctuation">,</span>
    SE<span class="token punctuation">.</span>EVENT<span class="token punctuation">,</span>
    SE<span class="token punctuation">.</span>LOCKWAIT<span class="token punctuation">,</span>
    SE<span class="token punctuation">.</span>MACHINE<span class="token punctuation">,</span>
    SQ<span class="token punctuation">.</span>SQL_ID<span class="token punctuation">,</span>
    SE<span class="token punctuation">.</span>USERNAME<span class="token punctuation">,</span>
    SE<span class="token punctuation">.</span>LOGON_TIME<span class="token punctuation">,</span>
    <span class="token string">&#39;ALTER SYSTEM KILL SESSION &#39;</span> <span class="token operator">||</span> SE<span class="token punctuation">.</span>SID <span class="token operator">||</span> <span class="token string">&#39;,&#39;</span> 
<span class="token keyword">FROM</span>
    gV$<span class="token keyword">SESSION</span> SE<span class="token punctuation">,</span>
    gV$SQLAREA SQ 
<span class="token keyword">WHERE</span>
    SE<span class="token punctuation">.</span>SQL_HASH_VALUE <span class="token operator">=</span> SQ<span class="token punctuation">.</span>HASH_VALUE 
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span><span class="token keyword">STATUS</span> <span class="token operator">=</span> <span class="token string">&#39;ACTIVE&#39;</span> 
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span>SQL_ID <span class="token operator">=</span> SQ<span class="token punctuation">.</span>SQL_ID 
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span>USERNAME <span class="token operator">=</span> SQ<span class="token punctuation">.</span>PARSING_SCHEMA_NAME 
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span>USERNAME <span class="token operator">=</span> <span class="token string">&#39;FWSB&#39;</span> 
    <span class="token operator">AND</span> SE<span class="token punctuation">.</span>BLOCKING_SESSION <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查询加锁的用户及对象</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>
<span class="token keyword">SELECT</span>
    s<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
    decode<span class="token punctuation">(</span>l<span class="token punctuation">.</span><span class="token keyword">TYPE</span><span class="token punctuation">,</span> <span class="token string">&#39;TM&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;TABLE LOCK&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;TX&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ROW LOCK&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span> <span class="token punctuation">)</span> LOCK_LEVEL<span class="token punctuation">,</span>
    o<span class="token punctuation">.</span>owner<span class="token punctuation">,</span>
    o<span class="token punctuation">.</span>object_name<span class="token punctuation">,</span>
    o<span class="token punctuation">.</span>object_type<span class="token punctuation">,</span>
    s<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>
    s<span class="token punctuation">.</span>terminal<span class="token punctuation">,</span>
    s<span class="token punctuation">.</span>machine<span class="token punctuation">,</span>
    s<span class="token punctuation">.</span>program<span class="token punctuation">,</span>
    s<span class="token punctuation">.</span>osuser
<span class="token keyword">FROM</span>
    v$<span class="token keyword">session</span> s<span class="token punctuation">,</span>
    v$<span class="token keyword">lock</span> l<span class="token punctuation">,</span>
    all_objects o
<span class="token keyword">WHERE</span>
     l<span class="token punctuation">.</span>sid <span class="token operator">=</span> s<span class="token punctuation">.</span>sid
    <span class="token operator">AND</span> l<span class="token punctuation">.</span>id1 <span class="token operator">=</span> o<span class="token punctuation">.</span>object_id<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span>
    <span class="token operator">AND</span> s<span class="token punctuation">.</span>username <span class="token operator">is</span> <span class="token operator">NOT</span> <span class="token boolean">Null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查询锁住的表和会话ID</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> a<span class="token punctuation">.</span>session_id <span class="token punctuation">,</span>b<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> v$locked_object a<span class="token punctuation">,</span>all_objects b <span class="token keyword">where</span> a<span class="token punctuation">.</span>object_id<span class="token operator">=</span>b<span class="token punctuation">.</span>object_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询加锁的SQL</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
    vs<span class="token punctuation">.</span>SQL_TEXT<span class="token punctuation">,</span>
    vsess<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>
    vsess<span class="token punctuation">.</span><span class="token keyword">SERIAL</span> <span class="token comment">#,</span>
    vsess<span class="token punctuation">.</span>MACHINE<span class="token punctuation">,</span>
    vsess<span class="token punctuation">.</span>OSUSER<span class="token punctuation">,</span>
    vsess<span class="token punctuation">.</span>TERMINAL<span class="token punctuation">,</span>
    vsess<span class="token punctuation">.</span>PROGRAM<span class="token punctuation">,</span>
    vs<span class="token punctuation">.</span>CPU_TIME<span class="token punctuation">,</span>
    vs<span class="token punctuation">.</span>DISK_READS 
<span class="token keyword">FROM</span>
    v$<span class="token keyword">sql</span> vs<span class="token punctuation">,</span>
    v$<span class="token keyword">session</span> vsess 
<span class="token keyword">WHERE</span>
    vs<span class="token punctuation">.</span>ADDRESS <span class="token operator">=</span> vsess<span class="token punctuation">.</span>SQL_ADDRESS 
    <span class="token operator">AND</span> vsess<span class="token punctuation">.</span>sid <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查询过程锁</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> V$DB_OBJECT_CACHE <span class="token keyword">WHERE</span> OWNER<span class="token operator">=</span><span class="token string">&#39;过程的所属用户&#39;</span> <span class="token operator">AND</span> LOCKS<span class="token operator">!=</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询过程锁的会话</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> V$ACCESS <span class="token keyword">WHERE</span> OWNER<span class="token operator">=</span><span class="token string">&#39;过程的所属用户&#39;</span> <span class="token operator">AND</span> NAME<span class="token operator">=</span><span class="token string">&#39;刚才查到的过程名&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询会话及进程</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> SID<span class="token punctuation">,</span><span class="token keyword">SERIAL</span><span class="token comment">#,PADDR FROM V$SESSION WHERE SID=&#39;刚才查到的 SID&#39;</span>

<span class="token keyword">SELECT</span> SPID <span class="token keyword">FROM</span> V$PROCESS <span class="token keyword">WHERE</span> ADDR<span class="token operator">=</span><span class="token string">&#39;刚才查到的 PADDR&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化"><span>性能优化</span></a></h2><h3 id="慢sql优化" tabindex="-1"><a class="header-anchor" href="#慢sql优化"><span>慢SQL优化</span></a></h3><ul><li><p>避免 in 操作 Oracle 中 in 会被试图转换成多个表的连接 , 转换不成功会先进行 in 中的子查询 , 再进行外部查询</p></li><li><p>避免 not in 不管哪个数据库 , 一般都是不推荐的 , 这种写法会跳过索引 (同理还有 is null 和 not null)</p></li><li><p>避免使用 &lt;&gt; 类似 , 不走索引，</p></li><li><p>函数索引 没有使用函数索引的字段采用函数处理的字段不能利用索引</p></li><li><p>关联查询 多用 Where 语句把单个表的结果集最小化, 多用聚合函数汇总结果集后再与其它表做关联</p></li><li><p>多用右连接</p></li><li><p>过滤多用 where , 避免使用 having 这个和 mysql 是一致的 , having 是对 where 的数据进行过滤组处理 , 对于数据的过滤 , 优先用 where</p></li><li><p>先过滤小的结果集, 然后通过这个小的结果集和其他表做关联</p></li><li><p>like 操作符 like 操作可以通过 instr 代替</p></li><li><p>union 操作符 通常不会产生重复结果 , 而 union 会额外触发一次排序。采用 union ALL 操作符替代 union, 因为 union ALL 操作只是简单的将两个结果合并后就返回。</p></li><li><p>SQL 执行保证统一性</p></li><li><p>where 后面的条件顺序影响 这里不是全表索引的问题 , 而是由于 where 多个条件时 , 比较带来的 cpu 占用率问题</p></li><li><p>询表顺序的影响 表的顺序不会十分耗服务器资源</p></li></ul><h2 id="整体性能优化流程" tabindex="-1"><a class="header-anchor" href="#整体性能优化流程"><span>整体性能优化流程</span></a></h2><h3 id="实例和内核优化" tabindex="-1"><a class="header-anchor" href="#实例和内核优化"><span>实例和内核优化</span></a></h3><ul><li><p>增大 SGA Buffer Cache 和 SGA Shared Pool 增大 SGA 已经缓冲看来对于性能的提升并不显著, 加载时间只提升了 1.73%</p></li><li><p>增大 SGA Redo Cache 和 Redo Log Files -&gt; 41.39 加载时间提升了 17.35%, TPS 也提升了 9.33%。因为加载和同时插入, 更新, 删除需要比 8M 大的空间。但是看起来增加内存性能并没有显著提升。</p></li><li><p>增大 Database Block Size (2K-4K) -&gt; 17.35 加载时间提升了 138%! 而对 TPS 值没有很大的影响</p></li><li><p>Database Block Size 增大 (4K-8K) -&gt; 11.42 TPS 继续提升 , 区别较大</p></li><li><p>使用 Tablespaces Local -&gt; 15.07 TPS 轻微提升</p></li><li><p>添加 io_slaves -&gt; 10.48 dbwr_io_slaves 4 lgwr_io_slaves (derived) 4</p></li><li><p>优化 Linux 内核 -&gt; 9.40 内核版本优化后 , 性能是有一定提升的</p></li><li><p>调整虚拟子内存 -&gt; 5.58 调整<code>/ect/sysctl.conf</code>中<code>vm.bdflush = 100 1200 128 512 15 5000 500 1884 2</code>参数。以作为优化 Oracle 的思路 , 可以看到 , 性能提升很大。</p></li></ul><h3 id="硬件优化" tabindex="-1"><a class="header-anchor" href="#硬件优化"><span>硬件优化</span></a></h3><p>此处是使用 IO 校准 (I/O Calibration), 可以用于评测一下数据库的 I/O 性能 , 通过 分析 IO 结果判断采用不同的策略</p><ul><li>Step 1 : 确定并行度配置 (通常是核数的 2 倍)</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">show</span> parameters parallel_thread<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Step 2 : 确定并行策略 (auto : Oracle 将依据要执行的操作的特性和对象的大小来确定并行度) 查询策略 :</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">show</span> parameters parallel_degree_policy<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置策略 :</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">session</span> <span class="token keyword">set</span> parallel_degree_policy <span class="token operator">=</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Step 3 : 查看并行度数据</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">set</span> serveroutput <span class="token keyword">on</span>
<span class="token keyword">DECLARE</span>
  lat  <span class="token keyword">INTEGER</span><span class="token punctuation">;</span>
  iops <span class="token keyword">INTEGER</span><span class="token punctuation">;</span>
  mbps <span class="token keyword">INTEGER</span><span class="token punctuation">;</span>
<span class="token keyword">BEGIN</span>
<span class="token comment">-- DBMS_RESOURCE_MANAGER.CALIBRATE_IO (disk_count,max_latency , iops, mbps, lat);</span>
   DBMS_RESOURCE_MANAGER<span class="token punctuation">.</span>CALIBRATE_IO <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> iops<span class="token punctuation">,</span> mbps<span class="token punctuation">,</span> lat<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
  DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE <span class="token punctuation">(</span><span class="token string">&#39;max_iops = &#39;</span> <span class="token operator">||</span> iops<span class="token punctuation">)</span><span class="token punctuation">;</span>
  DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE <span class="token punctuation">(</span><span class="token string">&#39;latency  = &#39;</span> <span class="token operator">||</span> lat<span class="token punctuation">)</span><span class="token punctuation">;</span>
  dbms_output<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span><span class="token string">&#39;max_mbps = &#39;</span> <span class="token operator">||</span> mbps<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>
<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">问题补充 : ORA-56708: 找不到任何具有异步 I/O 功能的数据文件</p><ul><li><p>确定 sync : show parameter filesystemio_options</p></li><li><p>设置 sync : filesystemio_options</p><ul><li><p>ASYNCH: 使 Oracle 支持文件的异步 (Asynchronous)IO</p></li><li><p>DIRECTIO: 使 Oracle 支持文件的 Direct IO</p></li><li><p>SETALL: 使 Oracle 同时支持文件的 Asynchronous IO 和 Direct IO</p></li><li><p>NONE: 使 Oracle 关闭对 Asynchronous IO 和 Direct IO 的支持</p></li></ul></li></ul></div><ul><li>设置Oracle IO使用策略</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> system <span class="token keyword">set</span> filesystemio_options<span class="token operator">=</span>setall scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span>
<span class="token keyword">shutdown</span> immediate<span class="token punctuation">;</span>
startup<span class="token punctuation">;</span>
<span class="token keyword">alter</span> system <span class="token keyword">set</span> filesystemio_options<span class="token operator">=</span>none scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),l=[t];function o(c,i){return s(),a("div",null,l)}const d=n(p,[["render",o],["__file","slowsql.html.vue"]]),k=JSON.parse('{"path":"/guide/database/oracle/performance/slowsql.html","title":"Oracle 慢查询排查思路","lang":"zh-CN","frontmatter":{"title":"Oracle 慢查询排查思路","description":"排查方向 （1）基准测试 (吞吐量): 包括 Oracle 本身吞吐量和磁盘 I/O 吞吐量 （2）硬件分析 (资源情况): 包括查看服务器 CPU , 硬盘的使用情况 （3）SQL 分析: 分析 SQL 中是否存在慢查询 , 是否命中索引 （4）配置优化: 分析是否可以通过环境配置提高性能 排查步骤 查询慢查询日志 TOPSQL-耗时 TOPSQL-...","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/database/oracle/performance/slowsql.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"Oracle 慢查询排查思路"}],["meta",{"property":"og:description","content":"排查方向 （1）基准测试 (吞吐量): 包括 Oracle 本身吞吐量和磁盘 I/O 吞吐量 （2）硬件分析 (资源情况): 包括查看服务器 CPU , 硬盘的使用情况 （3）SQL 分析: 分析 SQL 中是否存在慢查询 , 是否命中索引 （4）配置优化: 分析是否可以通过环境配置提高性能 排查步骤 查询慢查询日志 TOPSQL-耗时 TOPSQL-..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T14:06:18.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-05-11T14:06:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Oracle 慢查询排查思路\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T14:06:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"排查方向","slug":"排查方向","link":"#排查方向","children":[]},{"level":2,"title":"排查步骤","slug":"排查步骤","link":"#排查步骤","children":[{"level":3,"title":"查询慢查询日志","slug":"查询慢查询日志","link":"#查询慢查询日志","children":[]},{"level":3,"title":"查看执行计划","slug":"查看执行计划","link":"#查看执行计划","children":[]},{"level":3,"title":"查看锁的竞争","slug":"查看锁的竞争","link":"#查看锁的竞争","children":[]}]},{"level":2,"title":"性能优化","slug":"性能优化","link":"#性能优化","children":[{"level":3,"title":"慢SQL优化","slug":"慢sql优化","link":"#慢sql优化","children":[]}]},{"level":2,"title":"整体性能优化流程","slug":"整体性能优化流程","link":"#整体性能优化流程","children":[{"level":3,"title":"实例和内核优化","slug":"实例和内核优化","link":"#实例和内核优化","children":[]},{"level":3,"title":"硬件优化","slug":"硬件优化","link":"#硬件优化","children":[]}]}],"git":{"createdTime":1715436378000,"updatedTime":1715436378000,"contributors":[{"name":"ableit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":6.24,"words":1873},"filePathRelative":"guide/database/oracle/performance/slowsql.md","localizedDate":"2024年5月11日","autoDesc":true,"excerpt":"<h2>排查方向</h2>\\n<p>（1）基准测试 (吞吐量): 包括 Oracle 本身吞吐量和磁盘 I/O 吞吐量\\n（2）硬件分析 (资源情况): 包括查看服务器 CPU , 硬盘的使用情况\\n（3）SQL 分析: 分析 SQL 中是否存在慢查询 , 是否命中索引\\n（4）配置优化: 分析是否可以通过环境配置提高性能</p>\\n<h2>排查步骤</h2>\\n<h3>查询慢查询日志</h3>\\n<ul>\\n<li>TOPSQL-耗时</li>\\n</ul>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">select</span> <span class=\\"token operator\\">*</span>\\n <span class=\\"token keyword\\">from</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">select</span> sa<span class=\\"token punctuation\\">.</span>SQL_TEXT <span class=\\"token string\\">\\"执行 SQL\\"</span><span class=\\"token punctuation\\">,</span>\\n        sa<span class=\\"token punctuation\\">.</span>EXECUTIONS <span class=\\"token string\\">\\"执行次数\\"</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token function\\">round</span><span class=\\"token punctuation\\">(</span>sa<span class=\\"token punctuation\\">.</span>ELAPSED_TIME <span class=\\"token operator\\">/</span> <span class=\\"token number\\">1000000</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token string\\">\\"总执行时间\\"</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token function\\">round</span><span class=\\"token punctuation\\">(</span>sa<span class=\\"token punctuation\\">.</span>ELAPSED_TIME <span class=\\"token operator\\">/</span> <span class=\\"token number\\">1000000</span> <span class=\\"token operator\\">/</span> sa<span class=\\"token punctuation\\">.</span>EXECUTIONS<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token string\\">\\"平均执行时间\\"</span><span class=\\"token punctuation\\">,</span>\\n        sa<span class=\\"token punctuation\\">.</span>COMMAND_TYPE<span class=\\"token punctuation\\">,</span>\\n        sa<span class=\\"token punctuation\\">.</span>PARSING_USER_ID <span class=\\"token string\\">\\"用户 ID\\"</span><span class=\\"token punctuation\\">,</span>\\n        u<span class=\\"token punctuation\\">.</span>username <span class=\\"token string\\">\\"用户名\\"</span><span class=\\"token punctuation\\">,</span>\\n        sa<span class=\\"token punctuation\\">.</span>HASH_VALUE\\n     <span class=\\"token keyword\\">from</span> v$sqlarea sa\\n     <span class=\\"token keyword\\">left</span> <span class=\\"token keyword\\">join</span> all_users u\\n      <span class=\\"token keyword\\">on</span> sa<span class=\\"token punctuation\\">.</span>PARSING_USER_ID <span class=\\"token operator\\">=</span> u<span class=\\"token punctuation\\">.</span>user_id\\n     <span class=\\"token keyword\\">where</span> sa<span class=\\"token punctuation\\">.</span>EXECUTIONS <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span>\\n     <span class=\\"token keyword\\">order</span> <span class=\\"token keyword\\">by</span> <span class=\\"token punctuation\\">(</span>sa<span class=\\"token punctuation\\">.</span>ELAPSED_TIME <span class=\\"token operator\\">/</span> sa<span class=\\"token punctuation\\">.</span>EXECUTIONS<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">desc</span><span class=\\"token punctuation\\">)</span>\\n <span class=\\"token keyword\\">where</span> rownum <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">50</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>"}');export{d as comp,k as data};
