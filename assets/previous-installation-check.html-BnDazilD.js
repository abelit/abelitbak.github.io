import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as c,c as o,a as e,d as a,b as n,w as i,f as t}from"./app-DR5J2daJ.js";const r={},p=t(`<h1 id="tidb-环境与系统配置检查" tabindex="-1"><a class="header-anchor" href="#tidb-环境与系统配置检查"><span>TiDB 环境与系统配置检查</span></a></h1><p>本文介绍部署 TiDB 前的环境检查操作，以下各项操作按优先级排序。</p><h2 id="在-tikv-部署目标机器上添加数据盘-ext4-文件系统挂载参数" tabindex="-1"><a class="header-anchor" href="#在-tikv-部署目标机器上添加数据盘-ext4-文件系统挂载参数"><span>在 TiKV 部署目标机器上添加数据盘 EXT4 文件系统挂载参数</span></a></h2><p>生产环境部署，建议使用 EXT4 类型文件系统的 NVME 类型的 SSD 磁盘存储 TiKV 数据文件。这个配置方案为最佳实施方案，其可靠性、安全性、稳定性已经在大量线上场景中得到证实。</p><p>使用 <code>root</code> 用户登录目标机器，将部署目标机器数据盘格式化成 ext4 文件系统，挂载时添加 <code>nodelalloc</code> 和 <code>noatime</code> 挂载参数。<code>nodelalloc</code> 是必选参数，否则 TiUP 安装时检测无法通过；<code>noatime</code> 是可选建议参数。</p><blockquote><p><strong>注意：</strong></p><p>如果你的数据盘已经格式化成 ext4 并挂载了磁盘，可先执行 <code>umount /dev/nvme0n1p1</code> 命令卸载，从编辑 <code>/etc/fstab</code> 文件步骤开始执行，添加挂载参数重新挂载即可。</p></blockquote><p>以 <code>/dev/nvme0n1</code> 数据盘为例，具体操作步骤如下：</p><ol><li><p>查看数据盘。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">fdisk</span> <span class="token parameter variable">-l</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Disk /dev/nvme0n1: 1000 GB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建分区。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">parted</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-a</span> optimal /dev/nvme0n1 mklabel gpt -- mkpart primary ext4 <span class="token number">1</span> <span class="token parameter variable">-1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><p>使用 <code>lsblk</code> 命令查看分区的设备号：对于 nvme 磁盘，生成的分区设备号一般为 <code>nvme0n1p1</code>；对于普通磁盘（例如 <code>/dev/sdb</code>），生成的分区设备号一般为 <code>sdb1</code>。</p></blockquote></li><li><p>格式化文件系统。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mkfs.ext4 /dev/nvme0n1p1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查看数据盘分区 UUID。</p><p>本例中 <code>nvme0n1p1</code> 的 UUID 为 <code>c51eb23b-195c-4061-92a9-3fad812cc12f</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>lsblk <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>NAME    FSTYPE LABEL UUID                                 MOUNTPOINT
sda
├─sda1  ext4         237b634b-a565-477b-8371-6dff0c41f5ab /boot
├─sda2  swap         f414c5c0-f823-4bb1-8fdf-e531173a72ed
└─sda3  ext4         547909c1-398d-4696-94c6-03e43e317b60 /
sr0
nvme0n1
└─nvme0n1p1 ext4         c51eb23b-195c-4061-92a9-3fad812cc12f
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编辑 <code>/etc/fstab</code> 文件，添加 <code>nodelalloc</code> 挂载参数。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/fstab
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>UUID=c51eb23b-195c-4061-92a9-3fad812cc12f /data1 ext4 defaults,nodelalloc,noatime 0 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>挂载数据盘。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /data1 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>
<span class="token function">mount</span> <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行以下命令，如果文件系统为 ext4，并且挂载参数中包含 <code>nodelalloc</code>，则表示已生效。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mount</span> <span class="token parameter variable">-t</span> ext4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>/dev/nvme0n1p1 on /data1 type ext4 (rw,noatime,nodelalloc,data=ordered)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="检测及关闭系统-swap" tabindex="-1"><a class="header-anchor" href="#检测及关闭系统-swap"><span>检测及关闭系统 swap</span></a></h2><p>TiDB 运行需要有足够的内存。如果想保持性能稳定，则建议永久关闭系统 swap，但可能在内存偏小时触发 OOM 问题；如果想避免此类 OOM 问题，则可只将 swap 优先级调低，但不做永久关闭。</p><ul><li><p>开启并使用 swap 可能会引入性能抖动问题，对于低延迟、稳定性要求高的数据库服务，建议永久关闭操作系统层 swap。要永久关闭 swap，可使用以下方法：</p><ul><li><p>在操作系统初始化阶段，不单独划分 swap 分区盘。</p></li><li><p>如果在操作系统初始化阶段，已经单独划分了 swap 分区盘，并且启用了 swap，则使用以下命令进行关闭：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;vm.swappiness = 0&quot;</span><span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
swapoff <span class="token parameter variable">-a</span>
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>如果主机内存偏小，关闭系统 swap 可能会更容易触发 OOM 问题，可参考以如下方法将 swap 优先级调低，但不做永久关闭：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;vm.swappiness = 0&quot;</span><span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="设置-tidb-节点的临时空间-推荐" tabindex="-1"><a class="header-anchor" href="#设置-tidb-节点的临时空间-推荐"><span>设置 TiDB 节点的临时空间（推荐）</span></a></h2><p>TiDB 的部分操作需要向服务器写入临时文件，因此需要确保运行 TiDB 的操作系统用户具有足够的权限对目标目录进行读写。如果 TiDB 实例不是以 <code>root</code> 权限启动，则需要检查目录权限并进行正确设置。</p>`,13),u=e("p",null,"TiDB 临时工作区",-1),v=e("code",null,"tmp-storage-path",-1),m=e("code",null,"/tmp",-1),b=e("p",null,"Fast Online DDL 工作区",-1),h=e("code",null,"tidb_ddl_enable_fast_reorg",-1),g=e("code",null,"ON",-1),x=e("code",null,"ON",-1),k=e("code",null,"temp-dir",-1),f=e("code",null,"/tmp/tidb",-1),y=e("p",null,[e("strong",null,"注意：")],-1),T=e("code",null,"temp-dir",-1),_=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> /tmp/tidb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果目录 <code>/tmp/tidb</code> 已经存在，需确保有写入权限。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> /tmp/tidb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),q=e("p",null,[e("strong",null,"注意：")],-1),E=e("h2",{id:"检测及关闭目标部署机器的防火墙",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#检测及关闭目标部署机器的防火墙"},[e("span",null,"检测及关闭目标部署机器的防火墙")])],-1),w=t(`<ol><li><p>检查防火墙状态（以 CentOS Linux release 7.7.1908 (Core) 为例）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--state</span>
<span class="token function">sudo</span> systemctl status firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>关闭防火墙服务</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl stop firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>关闭防火墙自动启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl disable firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>检查防火墙状态</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="检测及安装-ntp-服务" tabindex="-1"><a class="header-anchor" href="#检测及安装-ntp-服务"><span>检测及安装 NTP 服务</span></a></h2><p>TiDB 是一套分布式数据库系统，需要节点间保证时间的同步，从而确保 ACID 模型的事务线性一致性。目前解决授时的普遍方案是采用 NTP 服务，可以通过互联网中的 <code>pool.ntp.org</code> 授时服务来保证节点的时间同步，也可以使用离线环境自己搭建的 NTP 服务来解决授时。</p><p>采用如下步骤检查是否安装 NTP 服务以及与 NTP 服务器正常同步：</p><ol><li><p>执行以下命令，如果输出 <code>running</code> 表示 NTP 服务正在运行：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status ntpd.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ntpd.service - Network Time Service
Loaded: loaded (/usr/lib/systemd/system/ntpd.service; disabled; vendor preset: disabled)
Active: active (running) since 一 2017-12-18 13:13:19 CST; 3s ago
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>若返回报错信息 <code>Unit ntpd.service could not be found.</code>，请尝试执行以下命令，以查看与 NTP 进行时钟同步所使用的系统配置是 <code>chronyd</code> 还是 <code>ntpd</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status chronyd.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>chronyd.service - NTP client/server
Loaded: loaded (/usr/lib/systemd/system/chronyd.service; enabled; vendor preset: enabled)
Active: active (running) since Mon 2021-04-05 09:55:29 EDT; 3 days ago
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若发现系统既没有配置 <code>chronyd</code> 也没有配置 <code>ntpd</code>，则表示系统尚未安装任一服务。此时，应先安装其中一个服务，并保证它可以自动启动，默认使用 <code>ntpd</code>。</p><p>如果你使用的系统配置是 <code>chronyd</code>，请直接执行步骤 3。</p></li></ul></li><li><p>执行 <code>ntpstat</code> 命令检测是否与 NTP 服务器同步：</p><blockquote><p><strong>注意：</strong></p><p>Ubuntu 系统需安装 <code>ntpstat</code> 软件包。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ntpstat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>如果输出 <code>synchronised to NTP server</code>，表示正在与 NTP 服务器正常同步：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>synchronised to NTP server (85.199.214.101) at stratum 2
time correct to within 91 ms
polling server every 1024 s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>以下情况表示 NTP 服务未正常同步：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>unsynchronised
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>以下情况表示 NTP 服务未正常运行：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Unable to talk to NTP daemon. Is it running?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>执行 <code>chronyc tracking</code> 命令查看 Chrony 服务是否与 NTP 服务器同步。</p><blockquote><p><strong>注意：</strong></p><p>该操作仅适用于使用 Chrony 的系统，不适用于使用 NTPd 的系统。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>chronyc tracking
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>如果该命令返回结果为 <code>Leap status : Normal</code>，则代表同步过程正常。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Reference ID    : 5EC69F0A (ntp1.time.nl)
Stratum         : 2
Ref time (UTC)  : Thu May 20 15:19:08 2021
System time     : 0.000022151 seconds slow of NTP time
Last offset     : -0.000041040 seconds
RMS offset      : 0.000053422 seconds
Frequency       : 2.286 ppm slow
Residual freq   : -0.000 ppm
Skew            : 0.012 ppm
Root delay      : 0.012706812 seconds
Root dispersion : 0.000430042 seconds
Update interval : 1029.8 seconds
Leap status     : Normal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>如果该命令返回结果如下，则表示同步过程出错：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Leap status    : Not synchronised
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>如果该命令返回结果如下，则表示 Chrony 服务未正常运行：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>506 Cannot talk to daemon
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ol><p>如果要使 NTP 服务尽快开始同步，执行以下命令。可以将 <code>pool.ntp.org</code> 替换为你的 NTP 服务器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl stop ntpd.service <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>
<span class="token function">sudo</span> ntpdate pool.ntp.org <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>
<span class="token function">sudo</span> systemctl start ntpd.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要在 CentOS 7 系统上手动安装 NTP 服务，可执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> ntp ntpdate <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>
<span class="token function">sudo</span> systemctl start ntpd.service <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> ntpd.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="检查和配置操作系统优化参数" tabindex="-1"><a class="header-anchor" href="#检查和配置操作系统优化参数"><span>检查和配置操作系统优化参数</span></a></h2><p>在生产系统的 TiDB 中，建议对操作系统进行如下的配置优化：</p><ol><li>关闭透明大页（即 Transparent Huge Pages，缩写为 THP）。数据库的内存访问模式往往是稀疏的而非连续的。当高阶内存碎片化比较严重时，分配 THP 页面会出现较高的延迟。</li><li>将存储介质的 I/O 调度器设置为 noop。对于高速 SSD 存储介质，内核的 I/O 调度操作会导致性能损失。将调度器设置为 noop 后，内核不做任何操作，直接将 I/O 请求下发给硬件，以获取更好的性能。同时，noop 调度器也有较好的普适性。</li><li>为调整 CPU 频率的 cpufreq 模块选用 performance 模式。将 CPU 频率固定在其支持的最高运行频率上，不进行动态调节，可获取最佳的性能。</li></ol><p>采用如下步骤检查操作系统的当前配置，并配置系统优化参数：</p><ol><li><p>执行以下命令查看透明大页的开启状态。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> /sys/kernel/mm/transparent_hugepage/enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[always] madvise never
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><p><code>[always] madvise never</code> 表示透明大页处于启用状态，需要关闭。</p></blockquote></li><li><p>执行以下命令查看数据目录所在磁盘的 I/O 调度器。假设在 sdb、sdc 两个磁盘上创建了数据目录。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> /sys/block/sd<span class="token punctuation">[</span>bc<span class="token punctuation">]</span>/queue/scheduler
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>noop [deadline] cfq
noop [deadline] cfq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><p><code>noop [deadline] cfq</code> 表示磁盘的 I/O 调度器使用 <code>deadline</code>，需要进行修改。</p></blockquote></li><li><p>执行以下命令查看磁盘的唯一标识 <code>ID_SERIAL</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>udevadm info <span class="token parameter variable">--name</span><span class="token operator">=</span>/dev/sdb <span class="token operator">|</span> <span class="token function">grep</span> ID_SERIAL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>E: ID_SERIAL=36d0946606d79f90025f3e09a0c1f9e81
E: ID_SERIAL_SHORT=6d0946606d79f90025f3e09a0c1f9e81
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><p>如果多个磁盘都分配了数据目录，需要多次执行以上命令，记录所有磁盘各自的唯一标识。</p></blockquote></li><li><p>执行以下命令查看 cpufreq 模块选用的节能策略。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>cpupower frequency-info <span class="token parameter variable">--policy</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>analyzing CPU 0:
current policy: frequency should be within 1.20 GHz and 3.10 GHz.
              The governor &quot;powersave&quot; may decide which speed to use within this range.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><p><code>The governor &quot;powersave&quot;</code> 表示 cpufreq 的节能策略使用 powersave，需要调整为 performance 策略。如果是虚拟机或者云主机，则不需要调整，命令输出通常为 <code>Unable to determine current policy</code>。</p></blockquote></li><li><p>配置系统优化参数</p><ul><li><p>方法一：使用 tuned（推荐）</p><ol><li><p>执行 <code>tuned-adm list</code> 命令查看当前操作系统的 tuned 策略。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tuned-adm list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Available profiles:
- balanced                    - General non-specialized tuned profile
- desktop                     - Optimize for the desktop use-case
- hpc-compute                 - Optimize for HPC compute workloads
- latency-performance         - Optimize for deterministic performance at the cost of increased power consumption
- network-latency             - Optimize for deterministic performance at the cost of increased power consumption, focused on low latency network performance
- network-throughput          - Optimize for streaming network throughput, generally only necessary on older CPUs or 40G+ networks
- powersave                   - Optimize for low power consumption
- throughput-performance      - Broadly applicable tuning that provides excellent performance across a variety of common server workloads
- virtual-guest               - Optimize for running inside a virtual guest
- virtual-host                - Optimize for running KVM guests
Current active profile: balanced
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Current active profile: balanced</code> 表示当前操作系统的 tuned 策略使用 balanced，建议在当前策略的基础上添加操作系统优化配置。</p></li><li><p>创建新的 tuned 策略。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /etc/tuned/balanced-tidb-optimal/
<span class="token function">vi</span> /etc/tuned/balanced-tidb-optimal/tuned.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[main]
include=balanced

[cpu]
governor=performance

[vm]
transparent_hugepages=never

[disk]
devices_udev_regex=(ID_SERIAL=36d0946606d79f90025f3e09a0c1fc035)|(ID_SERIAL=36d0946606d79f90025f3e09a0c1f9e81)
elevator=noop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>include=balanced</code> 表示在现有的 balanced 策略基础上添加操作系统优化配置。</p></li><li><p>应用新的 tuned 策略。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tuned-adm profile balanced-tidb-optimal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></li><li><p>方法二：使用脚本方式。如果已经使用 tuned 方法，请跳过本方法。</p><ol><li><p>执行 <code>grubby</code> 命令查看默认内核版本。</p><blockquote><p><strong>注意：</strong></p><p>需安装 <code>grubby</code> 软件包。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>grubby --default-kernel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>/boot/vmlinuz-3.10.0-957.el7.x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>执行 <code>grubby --update-kernel</code> 命令修改内核配置。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>grubby <span class="token parameter variable">--args</span><span class="token operator">=</span><span class="token string">&quot;transparent_hugepage=never&quot;</span> --update-kernel /boot/vmlinuz-3.10.0-957.el7.x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><p><code>--update-kernel</code> 后需要使用实际的默认内核版本。</p></blockquote></li><li><p>执行 <code>grubby --info</code> 命令查看修改后的默认内核配置。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>grubby <span class="token parameter variable">--info</span> /boot/vmlinuz-3.10.0-957.el7.x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><p><code>--info</code> 后需要使用实际的默认内核版本。</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>index=0
kernel=/boot/vmlinuz-3.10.0-957.el7.x86_64
args=&quot;ro crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet LANG=en_US.UTF-8 transparent_hugepage=never&quot;
root=/dev/mapper/centos-root
initrd=/boot/initramfs-3.10.0-957.el7.x86_64.img
title=CentOS Linux (3.10.0-957.el7.x86_64) 7 (Core)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改当前的内核配置立即关闭透明大页。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> never <span class="token operator">&gt;</span> /sys/kernel/mm/transparent_hugepage/enabled
<span class="token builtin class-name">echo</span> never <span class="token operator">&gt;</span> /sys/kernel/mm/transparent_hugepage/defrag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置 udev 脚本应用 IO 调度器策略。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/udev/rules.d/60-tidb-schedulers.rules
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ACTION==&quot;add|change&quot;, SUBSYSTEM==&quot;block&quot;, ENV{ID_SERIAL}==&quot;36d0946606d79f90025f3e09a0c1fc035&quot;, ATTR{queue/scheduler}=&quot;noop&quot;
ACTION==&quot;add|change&quot;, SUBSYSTEM==&quot;block&quot;, ENV{ID_SERIAL}==&quot;36d0946606d79f90025f3e09a0c1f9e81&quot;, ATTR{queue/scheduler}=&quot;noop&quot;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>应用 udev 脚本。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>udevadm control --reload-rules
udevadm trigger <span class="token parameter variable">--type</span><span class="token operator">=</span>devices <span class="token parameter variable">--action</span><span class="token operator">=</span>change
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建 CPU 节能策略配置服务。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span>  <span class="token operator">&gt;&gt;</span> /etc/systemd/system/cpupower.service <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[Unit]
Description=CPU performance
[Service]
Type=oneshot
ExecStart=/usr/bin/cpupower frequency-set --governor performance
[Install]
WantedBy=multi-user.target
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>应用 CPU 节能策略配置服务。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl daemon-reload
systemctl <span class="token builtin class-name">enable</span> cpupower.service
systemctl start cpupower.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li></ul></li><li><p>执行以下命令验证透明大页的状态。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> /sys/kernel/mm/transparent_hugepage/enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>always madvise [never]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>执行以下命令验证数据目录所在磁盘的 I/O 调度器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> /sys/block/sd<span class="token punctuation">[</span>bc<span class="token punctuation">]</span>/queue/scheduler
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[noop] deadline cfq
[noop] deadline cfq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行以下命令查看 cpufreq 模块选用的节能策略。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>cpupower frequency-info <span class="token parameter variable">--policy</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>analyzing CPU 0:
current policy: frequency should be within 1.20 GHz and 3.10 GHz.
              The governor &quot;performance&quot; may decide which speed to use within this range.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行以下命令修改 sysctl 参数。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;fs.file-max = 1000000&quot;</span><span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;net.core.somaxconn = 32768&quot;</span><span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;net.ipv4.tcp_tw_recycle = 0&quot;</span><span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;net.ipv4.tcp_syncookies = 0&quot;</span><span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;vm.overcommit_memory = 1&quot;</span><span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行以下命令配置用户的 limits.conf 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;&gt;</span>/etc/security/limits.conf</span>
tidb           soft    nofile          1000000
tidb           hard    nofile          1000000
tidb           soft    stack          32768
tidb           hard    stack          32768
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="手动配置-ssh-互信及-sudo-免密码" tabindex="-1"><a class="header-anchor" href="#手动配置-ssh-互信及-sudo-免密码"><span>手动配置 SSH 互信及 sudo 免密码</span></a></h2><p>对于有需求，通过手动配置中控机至目标节点互信的场景，可参考本段。通常推荐使用 TiUP 部署工具会自动配置 SSH 互信及免密登录，可忽略本段内容。</p><ol><li><p>以 <code>root</code> 用户依次登录到部署目标机器创建 <code>tidb</code> 用户并设置登录密码。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">useradd</span> tidb <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\\</span>
<span class="token function">passwd</span> tidb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行以下命令，将 <code>tidb ALL=(ALL) NOPASSWD: ALL</code> 添加到文件末尾，即配置好 sudo 免密码。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>visudo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>tidb ALL=(ALL) NOPASSWD: ALL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>以 <code>tidb</code> 用户登录到中控机，执行以下命令。将 <code>10.0.1.1</code> 替换成你的部署目标机器 IP，按提示输入部署目标机器 <code>tidb</code> 用户密码，执行成功后即创建好 SSH 互信，其他机器同理。新建的 <code>tidb</code> 用户下没有 <code>.ssh</code> 目录，需要执行生成 rsa 密钥的命令来生成 <code>.ssh</code> 目录。如果要在中控机上部署 TiDB 组件，需要为中控机和中控机自身配置互信。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa
ssh-copy-id <span class="token parameter variable">-i</span> ~/.ssh/id_rsa.pub <span class="token number">10.0</span>.1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>以 <code>tidb</code> 用户登录中控机，通过 <code>ssh</code> 的方式登录目标机器 IP。如果不需要输入密码并登录成功，即表示 SSH 互信配置成功。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token number">10.0</span>.1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[tidb@10.0.1.1 ~]$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>以 <code>tidb</code> 用户登录到部署目标机器后，执行以下命令，不需要输入密码并切换到 <code>root</code> 用户，表示 <code>tidb</code> 用户 sudo 免密码配置成功。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-su</span> root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[root@10.0.1.1 tidb]#
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="安装-numactl-工具" tabindex="-1"><a class="header-anchor" href="#安装-numactl-工具"><span>安装 numactl 工具</span></a></h2><p>本段主要介绍如何安装 NUMA 工具。在生产环境中，因为硬件机器配置往往高于需求，为了更合理规划资源，会考虑单机多实例部署 TiDB 或者 TiKV。NUMA 绑核工具的使用，主要为了防止 CPU 资源的争抢，引发性能衰退。</p><blockquote><p><strong>注意：</strong></p><ul><li>NUMA 绑核是用来隔离 CPU 资源的一种方法，适合高配置物理机环境部署多实例使用。</li><li>通过 <code>tiup cluster deploy</code> 完成部署操作，就可以通过 <code>exec</code> 命令来进行集群级别管理工作。</li></ul></blockquote><p>安装 NUMA 工具有两种方法：</p><p>方法 1：登录到目标节点进行安装（以 CentOS Linux release 7.7.1908 (Core) 为例）。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token parameter variable">-y</span> <span class="token function">install</span> numactl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>方法 2：通过 <code>tiup cluster exec</code> 在集群上批量安装 NUMA。</p>`,24),D=e("code",null,"tidb-test",-1),B=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tiup cluster deploy tidb-test v6.1.0 ./topology.yaml <span class="token parameter variable">--user</span> root <span class="token punctuation">[</span>-p<span class="token punctuation">]</span> <span class="token punctuation">[</span>-i /home/root/.ssh/gcp_rsa<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),N=t(`<li><p>执行 <code>tiup cluster exec</code> 命令，以 <code>sudo</code> 权限在 <code>tidb-test</code> 集群所有目标主机上安装 NUMA。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tiup cluster <span class="token builtin class-name">exec</span> tidb-test <span class="token parameter variable">--sudo</span> <span class="token parameter variable">--command</span> <span class="token string">&quot;yum -y install numactl&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你可以执行 <code>tiup cluster exec --help</code> 查看的 <code>tiup cluster exec</code> 命令的说明信息。</p></li>`,1);function S(C,A){const s=l("RouteLink");return c(),o("div",null,[p,e("ul",null,[e("li",null,[u,e("p",null,[a("哈希表构建、排序等内存消耗较大的操作可能会向磁盘写入临时数据，用来减少内存消耗，提升稳定性。写入的磁盘位置由配置项 "),n(s,{to:"/tidb-configuration-file.html#tmp-storage-path"},{default:i(()=>[v]),_:1}),a(" 定义。在默认设置下，确保运行 TiDB 的用户对操作系统临时文件夹（通常为 "),m,a("）有读写权限。")])]),e("li",null,[b,e("p",null,[a("当变量 "),n(s,{to:"/system-variables.html#tidb_ddl_enable_fast_reorg-%E4%BB%8E-v630-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5"},{default:i(()=>[h]),_:1}),a(" 被设置为 "),g,a("（v6.5.0 及以上版本中默认值为 "),x,a("）时，会激活 Fast Online DDL，这时部分 DDL 要对临时文件进行读写。临时文件位置由配置 "),n(s,{to:"/tidb-configuration-file.html#temp-dir-%E4%BB%8E-v630-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5"},{default:i(()=>[k]),_:1}),a(" 定义，需要确保运行 TiDB 的用户对操作系统中该目录有读写权限。以默认目录 "),f,a(" 为例：")]),e("blockquote",null,[y,e("p",null,[a("如果业务中可能存在针对大对象的 DDL 操作，推荐为 "),n(s,{to:"/tidb-configuration-file.html#temp-dir-%E4%BB%8E-v630-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5"},{default:i(()=>[T]),_:1}),a(" 配置独立文件系统及更大的临时空间。")])]),_,e("blockquote",null,[q,e("p",null,[a("如果目录不存在，TiDB 在启动时会自动创建该目录。如果目录创建失败，或者 TiDB 对该目录没有读写权限，"),n(s,{to:"/system-variables.html#tidb_ddl_enable_fast_reorg-%E4%BB%8E-v630-%E7%89%88%E6%9C%AC%E5%BC%80%E5%A7%8B%E5%BC%95%E5%85%A5"},{default:i(()=>[a("Fast Online DDL")]),_:1}),a(" 在运行时可能产生不可预知的问题。")])])])]),E,e("p",null,[a("本段介绍如何关闭目标主机防火墙配置，因为在 TiDB 集群中，需要将节点间的访问端口打通才可以保证读写请求、数据心跳等信息的正常的传输。在普遍线上场景中，数据库到业务服务和数据库节点的网络联通都是在安全域内完成数据交互。如果没有特殊安全的要求，建议将目标节点的防火墙进行关闭。否则建议"),n(s,{to:"/hardware-and-software-requirements.html#%E7%BD%91%E7%BB%9C%E8%A6%81%E6%B1%82"},{default:i(()=>[a("按照端口使用规则")]),_:1}),a("，将端口信息配置到防火墙服务的白名单中。")]),w,e("ol",null,[e("li",null,[e("p",null,[a("使用 TiUP 安装 TiDB 集群，参考"),n(s,{to:"/production-deployment-using-tiup.html"},{default:i(()=>[a("使用 TiUP 部署 TiDB 集群")]),_:1}),a("完成 "),D,a(" 集群的部署。如果本地已有集群，可跳过这一步。")]),B]),N])])}const U=d(r,[["render",S],["__file","previous-installation-check.html.vue"]]),L=JSON.parse('{"path":"/guide/database/tidb/deployments/previous-installation-check.html","title":"TiDB 环境与系统配置检查","lang":"zh-CN","frontmatter":{"title":"TiDB 环境与系统配置检查","description":"TiDB 环境与系统配置检查 本文介绍部署 TiDB 前的环境检查操作，以下各项操作按优先级排序。 在 TiKV 部署目标机器上添加数据盘 EXT4 文件系统挂载参数 生产环境部署，建议使用 EXT4 类型文件系统的 NVME 类型的 SSD 磁盘存储 TiKV 数据文件。这个配置方案为最佳实施方案，其可靠性、安全性、稳定性已经在大量线上场景中得到证实...","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/database/tidb/deployments/previous-installation-check.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"TiDB 环境与系统配置检查"}],["meta",{"property":"og:description","content":"TiDB 环境与系统配置检查 本文介绍部署 TiDB 前的环境检查操作，以下各项操作按优先级排序。 在 TiKV 部署目标机器上添加数据盘 EXT4 文件系统挂载参数 生产环境部署，建议使用 EXT4 类型文件系统的 NVME 类型的 SSD 磁盘存储 TiKV 数据文件。这个配置方案为最佳实施方案，其可靠性、安全性、稳定性已经在大量线上场景中得到证实..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T14:06:18.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-05-11T14:06:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TiDB 环境与系统配置检查\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T14:06:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"在 TiKV 部署目标机器上添加数据盘 EXT4 文件系统挂载参数","slug":"在-tikv-部署目标机器上添加数据盘-ext4-文件系统挂载参数","link":"#在-tikv-部署目标机器上添加数据盘-ext4-文件系统挂载参数","children":[]},{"level":2,"title":"检测及关闭系统 swap","slug":"检测及关闭系统-swap","link":"#检测及关闭系统-swap","children":[]},{"level":2,"title":"设置 TiDB 节点的临时空间（推荐）","slug":"设置-tidb-节点的临时空间-推荐","link":"#设置-tidb-节点的临时空间-推荐","children":[]},{"level":2,"title":"检测及关闭目标部署机器的防火墙","slug":"检测及关闭目标部署机器的防火墙","link":"#检测及关闭目标部署机器的防火墙","children":[]},{"level":2,"title":"检测及安装 NTP 服务","slug":"检测及安装-ntp-服务","link":"#检测及安装-ntp-服务","children":[]},{"level":2,"title":"检查和配置操作系统优化参数","slug":"检查和配置操作系统优化参数","link":"#检查和配置操作系统优化参数","children":[]},{"level":2,"title":"手动配置 SSH 互信及 sudo 免密码","slug":"手动配置-ssh-互信及-sudo-免密码","link":"#手动配置-ssh-互信及-sudo-免密码","children":[]},{"level":2,"title":"安装 numactl 工具","slug":"安装-numactl-工具","link":"#安装-numactl-工具","children":[]}],"git":{"createdTime":1715436378000,"updatedTime":1715436378000,"contributors":[{"name":"ableit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":14.06,"words":4217},"filePathRelative":"guide/database/tidb/deployments/previous-installation-check.md","localizedDate":"2024年5月11日","autoDesc":true,"excerpt":"\\n<p>本文介绍部署 TiDB 前的环境检查操作，以下各项操作按优先级排序。</p>\\n<h2>在 TiKV 部署目标机器上添加数据盘 EXT4 文件系统挂载参数</h2>\\n<p>生产环境部署，建议使用 EXT4 类型文件系统的 NVME 类型的 SSD 磁盘存储 TiKV 数据文件。这个配置方案为最佳实施方案，其可靠性、安全性、稳定性已经在大量线上场景中得到证实。</p>\\n<p>使用 <code>root</code> 用户登录目标机器，将部署目标机器数据盘格式化成 ext4 文件系统，挂载时添加 <code>nodelalloc</code> 和 <code>noatime</code> 挂载参数。<code>nodelalloc</code> 是必选参数，否则 TiUP 安装时检测无法通过；<code>noatime</code> 是可选建议参数。</p>"}');export{U as comp,L as data};
