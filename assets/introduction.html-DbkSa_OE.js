import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as t,f as r}from"./app-DR5J2daJ.js";const l="/assets/components-of-kubernetes-PGxKOYLl.svg",a={},o=r('<p>Kubernetes 是一个可移植、可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。 Kubernetes 拥有一个庞大且快速增长的生态，其服务、支持和工具的使用范围相当广泛。</p><p>Kubernetes 这个名字源于希腊语，意为“舵手”或“飞行员”。k8s 这个缩写是因为 k 和 s 之间有八个字符的关系。 Google 在 2014 年开源了 Kubernetes 项目。 Kubernetes 建立在 Google 大规模运行生产工作负载十几年经验的基础上， 结合了社区中最优秀的想法和实践。</p><h2 id="kubernetes架构和组件" tabindex="-1"><a class="header-anchor" href="#kubernetes架构和组件"><span>Kubernetes架构和组件</span></a></h2><figure><img src="'+l+'" alt="kubernetes architecture" tabindex="0" loading="lazy"><figcaption>kubernetes architecture</figcaption></figure><h2 id="控制平面组件-control-plane-components" tabindex="-1"><a class="header-anchor" href="#控制平面组件-control-plane-components"><span>控制平面组件（Control Plane Components）</span></a></h2><p>控制平面组件会为集群做出全局决策，比如资源的调度。 以及检测和响应集群事件，例如当不满足部署的 replicas 字段时， 要启动新的 pod）。</p><h3 id="kube-apiserver" tabindex="-1"><a class="header-anchor" href="#kube-apiserver"><span>kube-apiserver</span></a></h3><p>API 服务器是 Kubernetes 控制平面的组件， 该组件负责公开了 Kubernetes API，负责处理接受请求的工作。 API 服务器是 Kubernetes 控制平面的前端。</p><p>Kubernetes API 服务器的主要实现是 kube-apiserver。 kube-apiserver 设计上考虑了水平扩缩，也就是说，它可通过部署多个实例来进行扩缩。 你可以运行 kube-apiserver 的多个实例，并在这些实例之间平衡流量。</p><h3 id="etcd" tabindex="-1"><a class="header-anchor" href="#etcd"><span>etcd</span></a></h3><p>一致且高可用的键值存储，用作 Kubernetes 所有集群数据的后台数据库。</p><h3 id="kube-scheduler" tabindex="-1"><a class="header-anchor" href="#kube-scheduler"><span>kube-scheduler</span></a></h3><p>kube-scheduler 是控制平面的组件， 负责监视新创建的、未指定运行节点（node）的 Pods， 并选择节点来让 Pod 在上面运行。</p><p>调度决策考虑的因素包括单个 Pod 及 Pods 集合的资源需求、软硬件及策略约束、 亲和性及反亲和性规范、数据位置、工作负载间的干扰及最后时限。</p><h3 id="kube-controller-manager" tabindex="-1"><a class="header-anchor" href="#kube-controller-manager"><span>kube-controller-manager</span></a></h3><p>kube-controller-manager 是控制平面的组件， 负责运行控制器进程。</p><p>从逻辑上讲， 每个控制器都是一个单独的进程， 但是为了降低复杂性，它们都被编译到同一个可执行文件，并在同一个进程中运行。</p><p>这些控制器包括：</p><ul><li>节点控制器（Node Controller）：负责在节点出现故障时进行通知和响应</li><li>任务控制器（Job Controller）：监测代表一次性任务的 Job 对象，然后创建 Pods 来运行这些任务直至完成</li><li>端点分片控制器（EndpointSlice controller）：填充端点分片（EndpointSlice）对象（以提供 Service 和 Pod 之间的链接）。</li><li>服务账号控制器（ServiceAccount controller）：为新的命名空间创建默认的服务账号（ServiceAccount）。</li></ul><h3 id="cloud-controller-manager" tabindex="-1"><a class="header-anchor" href="#cloud-controller-manager"><span>cloud-controller-manager</span></a></h3><p>一个 Kubernetes 控制平面组件， 嵌入了特定于云平台的控制逻辑。 云控制器管理器（Cloud Controller Manager）允许你将你的集群连接到云提供商的 API 之上， 并将与该云平台交互的组件同与你的集群交互的组件分离开来。 cloud-controller-manager 仅运行特定于云平台的控制器。 因此如果你在自己的环境中运行 Kubernetes，或者在本地计算机中运行学习环境， 所部署的集群不需要有云控制器管理器。</p><p>与 kube-controller-manager 类似，cloud-controller-manager 将若干逻辑上独立的控制回路组合到同一个可执行文件中， 供你以同一进程的方式运行。 你可以对其执行水平扩容（运行不止一个副本）以提升性能或者增强容错能力。</p><p>下面的控制器都包含对云平台驱动的依赖：</p><ul><li>节点控制器（Node Controller）：用于在节点终止响应后检查云提供商以确定节点是否已被删除</li><li>路由控制器（Route Controller）：用于在底层云基础架构中设置路由</li><li>服务控制器（Service Controller）：用于创建、更新和删除云提供商负载均衡器</li></ul><h2 id="node-组件" tabindex="-1"><a class="header-anchor" href="#node-组件"><span>Node 组件</span></a></h2><p>节点组件会在每个节点上运行，负责维护运行的 Pod 并提供 Kubernetes 运行环境。</p><h3 id="kubelet" tabindex="-1"><a class="header-anchor" href="#kubelet"><span>kubelet</span></a></h3><p>kubelet 会在集群中每个节点（node）上运行。 它保证容器（containers）都运行在 Pod 中。</p><p>kubelet 接收一组通过各类机制提供给它的 PodSpecs， 确保这些 PodSpecs 中描述的容器处于运行状态且健康。 kubelet 不会管理不是由 Kubernetes 创建的容器。</p><h3 id="kube-proxy" tabindex="-1"><a class="header-anchor" href="#kube-proxy"><span>kube-proxy</span></a></h3><p>kube-proxy 是集群中每个节点（node）上所运行的网络代理， 实现 Kubernetes 服务（Service） 概念的一部分。</p><p>kube-proxy 维护节点上的一些网络规则， 这些网络规则会允许从集群内部或外部的网络会话与 Pod 进行网络通信。</p><p>如果操作系统提供了可用的数据包过滤层，则 kube-proxy 会通过它来实现网络规则。 否则，kube-proxy 仅做流量转发。</p><h3 id="容器运行时-container-runtime" tabindex="-1"><a class="header-anchor" href="#容器运行时-container-runtime"><span>容器运行时（Container Runtime）</span></a></h3><p>容器运行环境是负责运行容器的软件。</p><p>Kubernetes 支持许多容器运行环境，例如 containerd、 CRI-O 以及 Kubernetes CRI (容器运行环境接口) 的其他任何实现。</p><h3 id="插件-addons" tabindex="-1"><a class="header-anchor" href="#插件-addons"><span>插件（Addons）</span></a></h3><p>插件使用 Kubernetes 资源（DaemonSet、 Deployment 等）实现集群功能。 因为这些插件提供集群级别的功能，插件中命名空间域的资源属于 kube-system 命名空间。</p><p>下面描述众多插件中的几种。有关可用插件的完整列表，请参见 插件（Addons）。</p><h3 id="dns" tabindex="-1"><a class="header-anchor" href="#dns"><span>DNS</span></a></h3><p>尽管其他插件都并非严格意义上的必需组件，但几乎所有 Kubernetes 集群都应该有集群 DNS， 因为很多示例都需要 DNS 服务。</p><p>集群 DNS 是一个 DNS 服务器，和环境中的其他 DNS 服务器一起工作，它为 Kubernetes 服务提供 DNS 记录。</p><p>Kubernetes 启动的容器自动将此 DNS 服务器包含在其 DNS 搜索列表中。</p><h3 id="web-界面-仪表盘" tabindex="-1"><a class="header-anchor" href="#web-界面-仪表盘"><span>Web 界面（仪表盘）</span></a></h3><p>Dashboard 是 Kubernetes 集群的通用的、基于 Web 的用户界面。 它使用户可以管理集群中运行的应用程序以及集群本身， 并进行故障排除。</p><h3 id="容器资源监控" tabindex="-1"><a class="header-anchor" href="#容器资源监控"><span>容器资源监控</span></a></h3><p>容器资源监控 将关于容器的一些常见的时间序列度量值保存到一个集中的数据库中， 并提供浏览这些数据的界面。</p><h3 id="集群层面日志" tabindex="-1"><a class="header-anchor" href="#集群层面日志"><span>集群层面日志</span></a></h3><p>集群层面日志机制负责将容器的日志数据保存到一个集中的日志存储中， 这种集中日志存储提供搜索和浏览接口。</p>',49),s=[o];function i(c,p){return n(),t("div",null,s)}const h=e(a,[["render",i],["__file","introduction.html.vue"]]),b=JSON.parse('{"path":"/guide/cloudnative/kubernetes/introduction.html","title":"Kubernetes概述","lang":"zh-CN","frontmatter":{"title":"Kubernetes概述","description":"Kubernetes 是一个可移植、可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。 Kubernetes 拥有一个庞大且快速增长的生态，其服务、支持和工具的使用范围相当广泛。 Kubernetes 这个名字源于希腊语，意为“舵手”或“飞行员”。k8s 这个缩写是因为 k 和 s 之间有八个字符的关系。 Google 在 2...","head":[["meta",{"property":"og:url","content":"https://github.com/abelit/abelit-datapeacock.git/guide/cloudnative/kubernetes/introduction.html"}],["meta",{"property":"og:site_name","content":"数之雀"}],["meta",{"property":"og:title","content":"Kubernetes概述"}],["meta",{"property":"og:description","content":"Kubernetes 是一个可移植、可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。 Kubernetes 拥有一个庞大且快速增长的生态，其服务、支持和工具的使用范围相当广泛。 Kubernetes 这个名字源于希腊语，意为“舵手”或“飞行员”。k8s 这个缩写是因为 k 和 s 之间有八个字符的关系。 Google 在 2..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T14:06:18.000Z"}],["meta",{"property":"article:author","content":"Abelit"}],["meta",{"property":"article:modified_time","content":"2024-05-11T14:06:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kubernetes概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T14:06:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Abelit\\",\\"url\\":\\"https://github.com/abelit\\"}]}"]]},"headers":[{"level":2,"title":"Kubernetes架构和组件","slug":"kubernetes架构和组件","link":"#kubernetes架构和组件","children":[]},{"level":2,"title":"控制平面组件（Control Plane Components）","slug":"控制平面组件-control-plane-components","link":"#控制平面组件-control-plane-components","children":[{"level":3,"title":"kube-apiserver","slug":"kube-apiserver","link":"#kube-apiserver","children":[]},{"level":3,"title":"etcd","slug":"etcd","link":"#etcd","children":[]},{"level":3,"title":"kube-scheduler","slug":"kube-scheduler","link":"#kube-scheduler","children":[]},{"level":3,"title":"kube-controller-manager","slug":"kube-controller-manager","link":"#kube-controller-manager","children":[]},{"level":3,"title":"cloud-controller-manager","slug":"cloud-controller-manager","link":"#cloud-controller-manager","children":[]}]},{"level":2,"title":"Node 组件","slug":"node-组件","link":"#node-组件","children":[{"level":3,"title":"kubelet","slug":"kubelet","link":"#kubelet","children":[]},{"level":3,"title":"kube-proxy","slug":"kube-proxy","link":"#kube-proxy","children":[]},{"level":3,"title":"容器运行时（Container Runtime）","slug":"容器运行时-container-runtime","link":"#容器运行时-container-runtime","children":[]},{"level":3,"title":"插件（Addons）","slug":"插件-addons","link":"#插件-addons","children":[]},{"level":3,"title":"DNS","slug":"dns","link":"#dns","children":[]},{"level":3,"title":"Web 界面（仪表盘）","slug":"web-界面-仪表盘","link":"#web-界面-仪表盘","children":[]},{"level":3,"title":"容器资源监控","slug":"容器资源监控","link":"#容器资源监控","children":[]},{"level":3,"title":"集群层面日志","slug":"集群层面日志","link":"#集群层面日志","children":[]}]}],"git":{"createdTime":1715436378000,"updatedTime":1715436378000,"contributors":[{"name":"ableit","email":"ychenid@live.com","commits":1}]},"readingTime":{"minutes":5.48,"words":1643},"filePathRelative":"guide/cloudnative/kubernetes/introduction.md","localizedDate":"2024年5月11日","autoDesc":true,"excerpt":"<p>Kubernetes 是一个可移植、可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。 Kubernetes 拥有一个庞大且快速增长的生态，其服务、支持和工具的使用范围相当广泛。</p>\\n<p>Kubernetes 这个名字源于希腊语，意为“舵手”或“飞行员”。k8s 这个缩写是因为 k 和 s 之间有八个字符的关系。 Google 在 2014 年开源了 Kubernetes 项目。 Kubernetes 建立在 Google 大规模运行生产工作负载十几年经验的基础上， 结合了社区中最优秀的想法和实践。</p>\\n<h2>Kubernetes架构和组件</h2>"}');export{h as comp,b as data};
